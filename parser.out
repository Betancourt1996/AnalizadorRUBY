Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    AND
    ASIGNACION
    ASIGNACIONDIVISION
    ASIGNACIONEXPONENCIAL
    ASIGNACIONMODULO
    ASIGNACIONPRODUCTO
    ASIGNACIONRESTA
    ASIGNACIONSUMA
    BREAK
    CADENATEXTO
    CARACTERX
    CASE
    CLASS
    CONCATSTR
    CONTROLX
    DEF
    DO
    ELSE
    ELSIF
    ENSURE
    ESCAPES
    ESPACIOBLANCO
    FICHAS
    FOR
    IGUALDADESTRICTA
    IN
    METACONTROLX
    MOD
    MODULE
    NEGACION
    NEXT
    NIL
    NOT
    NOTACIONHEXA
    NOTACIONOCTAL
    OR
    PESTANAVERTICAL
    REDO
    RESCUE
    RETORNO
    RETRY
    RETURN
    SALTOLINEA
    SALTOPAGINA
    SELF
    SPACESHIP
    SUPER
    UNDEF
    UNLESS
    UNTIL
    WHEN
    WHILE
    YIELD
    _FILE_
    _LINE_

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> impresion
Rule 2     sentencias -> argumento
Rule 3     sentencias -> puts
Rule 4     sentencias -> IF LPAREN condicional RPAREN sentencias END
Rule 5     sentencias -> IF LPAREN condicional RPAREN THEN sentencias END
Rule 6     impresion -> PRINT LPAREN argumento RPAREN
Rule 7     impresion -> PRINT argumento
Rule 8     impresion -> PRINT LPAREN RPAREN
Rule 9     impresion -> PRINT
Rule 10    puts -> PUTS LPAREN argumento RPAREN
Rule 11    puts -> PUTS argumento
Rule 12    puts -> PUTS LPAREN RPAREN
Rule 13    puts -> PUTS
Rule 14    argumento -> expression
Rule 15    argumento -> cadena
Rule 16    argumento -> condicional
Rule 17    condicional -> boolean
Rule 18    condicional -> boolOp
Rule 19    boolean -> TRUE
Rule 20    boolean -> FALSE
Rule 21    boolOp -> factor MAYORQUE factor
Rule 22    boolOp -> factor MENORQUE factor
Rule 23    boolOp -> factor MAYORIGUALQUE factor
Rule 24    boolOp -> factor MENORIGUALQUE factor
Rule 25    boolOp -> factor IGUALQUE factor
Rule 26    boolOp -> factor DIFERENTEQUE factor
Rule 27    boolOp -> factor ANDLOGICO factor
Rule 28    boolOp -> factor ORLOGICO factor
Rule 29    cadena -> STRING
Rule 30    cadena -> STRINGCC
Rule 31    expression -> expression PLUS term
Rule 32    expression -> expression MINUS term
Rule 33    expression -> term
Rule 34    term -> term TIMES factor
Rule 35    term -> term DIVIDE factor
Rule 36    term -> factor
Rule 37    factor -> NUMBER
Rule 38    factor -> ID
Rule 39    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ALIAS                : 
AND                  : 
ANDLOGICO            : 27
ASIGNACION           : 
ASIGNACIONDIVISION   : 
ASIGNACIONEXPONENCIAL : 
ASIGNACIONMODULO     : 
ASIGNACIONPRODUCTO   : 
ASIGNACIONRESTA      : 
ASIGNACIONSUMA       : 
BREAK                : 
CADENATEXTO          : 
CARACTERX            : 
CASE                 : 
CLASS                : 
CONCATSTR            : 
CONTROLX             : 
DEF                  : 
DIFERENTEQUE         : 26
DIVIDE               : 35
DO                   : 
ELSE                 : 
ELSIF                : 
END                  : 4 5
ENSURE               : 
ESCAPES              : 
ESPACIOBLANCO        : 
FALSE                : 20
FICHAS               : 
FOR                  : 
ID                   : 38
IF                   : 4 5
IGUALDADESTRICTA     : 
IGUALQUE             : 25
IN                   : 
LPAREN               : 4 5 6 8 10 12 39
MAYORIGUALQUE        : 23
MAYORQUE             : 21
MENORIGUALQUE        : 24
MENORQUE             : 22
METACONTROLX         : 
MINUS                : 32
MOD                  : 
MODULE               : 
NEGACION             : 
NEXT                 : 
NIL                  : 
NOT                  : 
NOTACIONHEXA         : 
NOTACIONOCTAL        : 
NUMBER               : 37
OR                   : 
ORLOGICO             : 28
PESTANAVERTICAL      : 
PLUS                 : 31
PRINT                : 6 7 8 9
PUTS                 : 10 11 12 13
REDO                 : 
RESCUE               : 
RETORNO              : 
RETRY                : 
RETURN               : 
RPAREN               : 4 5 6 8 10 12 39
SALTOLINEA           : 
SALTOPAGINA          : 
SELF                 : 
SPACESHIP            : 
STRING               : 29
STRINGCC             : 30
SUPER                : 
THEN                 : 5
TIMES                : 34
TRUE                 : 19
UNDEF                : 
UNLESS               : 
UNTIL                : 
WHEN                 : 
WHILE                : 
YIELD                : 
_FILE_               : 
_LINE_               : 
error                : 

Nonterminals, with rules where they appear

argumento            : 2 6 7 10 11
boolOp               : 18
boolean              : 17
cadena               : 15
condicional          : 4 5 16
expression           : 14 31 32 39
factor               : 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 34 35 36
impresion            : 1
puts                 : 3
sentencias           : 4 5 0
term                 : 31 32 33 34 35

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . impresion
    (2) sentencias -> . argumento
    (3) sentencias -> . puts
    (4) sentencias -> . IF LPAREN condicional RPAREN sentencias END
    (5) sentencias -> . IF LPAREN condicional RPAREN THEN sentencias END
    (6) impresion -> . PRINT LPAREN argumento RPAREN
    (7) impresion -> . PRINT argumento
    (8) impresion -> . PRINT LPAREN RPAREN
    (9) impresion -> . PRINT
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (16) argumento -> . condicional
    (10) puts -> . PUTS LPAREN argumento RPAREN
    (11) puts -> . PUTS argumento
    (12) puts -> . PUTS LPAREN RPAREN
    (13) puts -> . PUTS
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (29) cadena -> . STRING
    (30) cadena -> . STRINGCC
    (17) condicional -> . boolean
    (18) condicional -> . boolOp
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) term -> . factor
    (19) boolean -> . TRUE
    (20) boolean -> . FALSE
    (21) boolOp -> . factor MAYORQUE factor
    (22) boolOp -> . factor MENORQUE factor
    (23) boolOp -> . factor MAYORIGUALQUE factor
    (24) boolOp -> . factor MENORIGUALQUE factor
    (25) boolOp -> . factor IGUALQUE factor
    (26) boolOp -> . factor DIFERENTEQUE factor
    (27) boolOp -> . factor ANDLOGICO factor
    (28) boolOp -> . factor ORLOGICO factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 5
    PRINT           shift and go to state 8
    PUTS            shift and go to state 11
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    sentencias                     shift and go to state 1
    impresion                      shift and go to state 2
    argumento                      shift and go to state 3
    puts                           shift and go to state 4
    condicional                    shift and go to state 7
    expression                     shift and go to state 9
    cadena                         shift and go to state 10
    term                           shift and go to state 12
    boolean                        shift and go to state 15
    boolOp                         shift and go to state 16
    factor                         shift and go to state 17

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> impresion .

    $end            reduce using rule 1 (sentencias -> impresion .)
    END             reduce using rule 1 (sentencias -> impresion .)


state 3

    (2) sentencias -> argumento .

    $end            reduce using rule 2 (sentencias -> argumento .)
    END             reduce using rule 2 (sentencias -> argumento .)


state 4

    (3) sentencias -> puts .

    $end            reduce using rule 3 (sentencias -> puts .)
    END             reduce using rule 3 (sentencias -> puts .)


state 5

    (4) sentencias -> IF . LPAREN condicional RPAREN sentencias END
    (5) sentencias -> IF . LPAREN condicional RPAREN THEN sentencias END

    LPAREN          shift and go to state 22


state 6

    (39) factor -> LPAREN . expression RPAREN
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    expression                     shift and go to state 23
    term                           shift and go to state 12
    factor                         shift and go to state 24

state 7

    (16) argumento -> condicional .

    $end            reduce using rule 16 (argumento -> condicional .)
    END             reduce using rule 16 (argumento -> condicional .)
    RPAREN          reduce using rule 16 (argumento -> condicional .)


state 8

    (6) impresion -> PRINT . LPAREN argumento RPAREN
    (7) impresion -> PRINT . argumento
    (8) impresion -> PRINT . LPAREN RPAREN
    (9) impresion -> PRINT .
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (16) argumento -> . condicional
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (29) cadena -> . STRING
    (30) cadena -> . STRINGCC
    (17) condicional -> . boolean
    (18) condicional -> . boolOp
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) term -> . factor
    (19) boolean -> . TRUE
    (20) boolean -> . FALSE
    (21) boolOp -> . factor MAYORQUE factor
    (22) boolOp -> . factor MENORQUE factor
    (23) boolOp -> . factor MAYORIGUALQUE factor
    (24) boolOp -> . factor MENORIGUALQUE factor
    (25) boolOp -> . factor IGUALQUE factor
    (26) boolOp -> . factor DIFERENTEQUE factor
    (27) boolOp -> . factor ANDLOGICO factor
    (28) boolOp -> . factor ORLOGICO factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 25
    $end            reduce using rule 9 (impresion -> PRINT .)
    END             reduce using rule 9 (impresion -> PRINT .)
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19
    NUMBER          shift and go to state 20
    ID              shift and go to state 21

    argumento                      shift and go to state 26
    expression                     shift and go to state 9
    cadena                         shift and go to state 10
    condicional                    shift and go to state 7
    term                           shift and go to state 12
    boolean                        shift and go to state 15
    boolOp                         shift and go to state 16
    factor                         shift and go to state 17

state 9

    (14) argumento -> expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    $end            reduce using rule 14 (argumento -> expression .)
    END             reduce using rule 14 (argumento -> expression .)
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 10

    (15) argumento -> cadena .

    $end            reduce using rule 15 (argumento -> cadena .)
    END             reduce using rule 15 (argumento -> cadena .)
    RPAREN          reduce using rule 15 (argumento -> cadena .)


state 11

    (10) puts -> PUTS . LPAREN argumento RPAREN
    (11) puts -> PUTS . argumento
    (12) puts -> PUTS . LPAREN RPAREN
    (13) puts -> PUTS .
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (16) argumento -> . condicional
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (29) cadena -> . STRING
    (30) cadena -> . STRINGCC
    (17) condicional -> . boolean
    (18) condicional -> . boolOp
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) term -> . factor
    (19) boolean -> . TRUE
    (20) boolean -> . FALSE
    (21) boolOp -> . factor MAYORQUE factor
    (22) boolOp -> . factor MENORQUE factor
    (23) boolOp -> . factor MAYORIGUALQUE factor
    (24) boolOp -> . factor MENORIGUALQUE factor
    (25) boolOp -> . factor IGUALQUE factor
    (26) boolOp -> . factor DIFERENTEQUE factor
    (27) boolOp -> . factor ANDLOGICO factor
    (28) boolOp -> . factor ORLOGICO factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 29
    $end            reduce using rule 13 (puts -> PUTS .)
    END             reduce using rule 13 (puts -> PUTS .)
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19
    NUMBER          shift and go to state 20
    ID              shift and go to state 21

    argumento                      shift and go to state 30
    expression                     shift and go to state 9
    cadena                         shift and go to state 10
    condicional                    shift and go to state 7
    term                           shift and go to state 12
    boolean                        shift and go to state 15
    boolOp                         shift and go to state 16
    factor                         shift and go to state 17

state 12

    (33) expression -> term .
    (34) term -> term . TIMES factor
    (35) term -> term . DIVIDE factor

    PLUS            reduce using rule 33 (expression -> term .)
    MINUS           reduce using rule 33 (expression -> term .)
    $end            reduce using rule 33 (expression -> term .)
    RPAREN          reduce using rule 33 (expression -> term .)
    END             reduce using rule 33 (expression -> term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 13

    (29) cadena -> STRING .

    $end            reduce using rule 29 (cadena -> STRING .)
    END             reduce using rule 29 (cadena -> STRING .)
    RPAREN          reduce using rule 29 (cadena -> STRING .)


state 14

    (30) cadena -> STRINGCC .

    $end            reduce using rule 30 (cadena -> STRINGCC .)
    END             reduce using rule 30 (cadena -> STRINGCC .)
    RPAREN          reduce using rule 30 (cadena -> STRINGCC .)


state 15

    (17) condicional -> boolean .

    $end            reduce using rule 17 (condicional -> boolean .)
    END             reduce using rule 17 (condicional -> boolean .)
    RPAREN          reduce using rule 17 (condicional -> boolean .)


state 16

    (18) condicional -> boolOp .

    $end            reduce using rule 18 (condicional -> boolOp .)
    END             reduce using rule 18 (condicional -> boolOp .)
    RPAREN          reduce using rule 18 (condicional -> boolOp .)


state 17

    (36) term -> factor .
    (21) boolOp -> factor . MAYORQUE factor
    (22) boolOp -> factor . MENORQUE factor
    (23) boolOp -> factor . MAYORIGUALQUE factor
    (24) boolOp -> factor . MENORIGUALQUE factor
    (25) boolOp -> factor . IGUALQUE factor
    (26) boolOp -> factor . DIFERENTEQUE factor
    (27) boolOp -> factor . ANDLOGICO factor
    (28) boolOp -> factor . ORLOGICO factor

    TIMES           reduce using rule 36 (term -> factor .)
    DIVIDE          reduce using rule 36 (term -> factor .)
    PLUS            reduce using rule 36 (term -> factor .)
    MINUS           reduce using rule 36 (term -> factor .)
    $end            reduce using rule 36 (term -> factor .)
    END             reduce using rule 36 (term -> factor .)
    RPAREN          reduce using rule 36 (term -> factor .)
    MAYORQUE        shift and go to state 33
    MENORQUE        shift and go to state 34
    MAYORIGUALQUE   shift and go to state 35
    MENORIGUALQUE   shift and go to state 36
    IGUALQUE        shift and go to state 37
    DIFERENTEQUE    shift and go to state 38
    ANDLOGICO       shift and go to state 39
    ORLOGICO        shift and go to state 40


state 18

    (19) boolean -> TRUE .

    $end            reduce using rule 19 (boolean -> TRUE .)
    END             reduce using rule 19 (boolean -> TRUE .)
    RPAREN          reduce using rule 19 (boolean -> TRUE .)


state 19

    (20) boolean -> FALSE .

    $end            reduce using rule 20 (boolean -> FALSE .)
    END             reduce using rule 20 (boolean -> FALSE .)
    RPAREN          reduce using rule 20 (boolean -> FALSE .)


state 20

    (37) factor -> NUMBER .

    MAYORQUE        reduce using rule 37 (factor -> NUMBER .)
    MENORQUE        reduce using rule 37 (factor -> NUMBER .)
    MAYORIGUALQUE   reduce using rule 37 (factor -> NUMBER .)
    MENORIGUALQUE   reduce using rule 37 (factor -> NUMBER .)
    IGUALQUE        reduce using rule 37 (factor -> NUMBER .)
    DIFERENTEQUE    reduce using rule 37 (factor -> NUMBER .)
    ANDLOGICO       reduce using rule 37 (factor -> NUMBER .)
    ORLOGICO        reduce using rule 37 (factor -> NUMBER .)
    TIMES           reduce using rule 37 (factor -> NUMBER .)
    DIVIDE          reduce using rule 37 (factor -> NUMBER .)
    PLUS            reduce using rule 37 (factor -> NUMBER .)
    MINUS           reduce using rule 37 (factor -> NUMBER .)
    $end            reduce using rule 37 (factor -> NUMBER .)
    RPAREN          reduce using rule 37 (factor -> NUMBER .)
    END             reduce using rule 37 (factor -> NUMBER .)


state 21

    (38) factor -> ID .

    MAYORQUE        reduce using rule 38 (factor -> ID .)
    MENORQUE        reduce using rule 38 (factor -> ID .)
    MAYORIGUALQUE   reduce using rule 38 (factor -> ID .)
    MENORIGUALQUE   reduce using rule 38 (factor -> ID .)
    IGUALQUE        reduce using rule 38 (factor -> ID .)
    DIFERENTEQUE    reduce using rule 38 (factor -> ID .)
    ANDLOGICO       reduce using rule 38 (factor -> ID .)
    ORLOGICO        reduce using rule 38 (factor -> ID .)
    TIMES           reduce using rule 38 (factor -> ID .)
    DIVIDE          reduce using rule 38 (factor -> ID .)
    PLUS            reduce using rule 38 (factor -> ID .)
    MINUS           reduce using rule 38 (factor -> ID .)
    $end            reduce using rule 38 (factor -> ID .)
    RPAREN          reduce using rule 38 (factor -> ID .)
    END             reduce using rule 38 (factor -> ID .)


state 22

    (4) sentencias -> IF LPAREN . condicional RPAREN sentencias END
    (5) sentencias -> IF LPAREN . condicional RPAREN THEN sentencias END
    (17) condicional -> . boolean
    (18) condicional -> . boolOp
    (19) boolean -> . TRUE
    (20) boolean -> . FALSE
    (21) boolOp -> . factor MAYORQUE factor
    (22) boolOp -> . factor MENORQUE factor
    (23) boolOp -> . factor MAYORIGUALQUE factor
    (24) boolOp -> . factor MENORIGUALQUE factor
    (25) boolOp -> . factor IGUALQUE factor
    (26) boolOp -> . factor DIFERENTEQUE factor
    (27) boolOp -> . factor ANDLOGICO factor
    (28) boolOp -> . factor ORLOGICO factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    TRUE            shift and go to state 18
    FALSE           shift and go to state 19
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    condicional                    shift and go to state 41
    boolean                        shift and go to state 15
    boolOp                         shift and go to state 16
    factor                         shift and go to state 42

state 23

    (39) factor -> LPAREN expression . RPAREN
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    RPAREN          shift and go to state 43
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 24

    (36) term -> factor .

    TIMES           reduce using rule 36 (term -> factor .)
    DIVIDE          reduce using rule 36 (term -> factor .)
    RPAREN          reduce using rule 36 (term -> factor .)
    PLUS            reduce using rule 36 (term -> factor .)
    MINUS           reduce using rule 36 (term -> factor .)
    $end            reduce using rule 36 (term -> factor .)
    END             reduce using rule 36 (term -> factor .)


state 25

    (6) impresion -> PRINT LPAREN . argumento RPAREN
    (8) impresion -> PRINT LPAREN . RPAREN
    (39) factor -> LPAREN . expression RPAREN
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (16) argumento -> . condicional
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (29) cadena -> . STRING
    (30) cadena -> . STRINGCC
    (17) condicional -> . boolean
    (18) condicional -> . boolOp
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) term -> . factor
    (19) boolean -> . TRUE
    (20) boolean -> . FALSE
    (21) boolOp -> . factor MAYORQUE factor
    (22) boolOp -> . factor MENORQUE factor
    (23) boolOp -> . factor MAYORIGUALQUE factor
    (24) boolOp -> . factor MENORIGUALQUE factor
    (25) boolOp -> . factor IGUALQUE factor
    (26) boolOp -> . factor DIFERENTEQUE factor
    (27) boolOp -> . factor ANDLOGICO factor
    (28) boolOp -> . factor ORLOGICO factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    RPAREN          shift and go to state 45
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    argumento                      shift and go to state 44
    expression                     shift and go to state 46
    cadena                         shift and go to state 10
    condicional                    shift and go to state 7
    term                           shift and go to state 12
    boolean                        shift and go to state 15
    boolOp                         shift and go to state 16
    factor                         shift and go to state 17

state 26

    (7) impresion -> PRINT argumento .

    $end            reduce using rule 7 (impresion -> PRINT argumento .)
    END             reduce using rule 7 (impresion -> PRINT argumento .)


state 27

    (31) expression -> expression PLUS . term
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    term                           shift and go to state 47
    factor                         shift and go to state 24

state 28

    (32) expression -> expression MINUS . term
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    term                           shift and go to state 48
    factor                         shift and go to state 24

state 29

    (10) puts -> PUTS LPAREN . argumento RPAREN
    (12) puts -> PUTS LPAREN . RPAREN
    (39) factor -> LPAREN . expression RPAREN
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (16) argumento -> . condicional
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (29) cadena -> . STRING
    (30) cadena -> . STRINGCC
    (17) condicional -> . boolean
    (18) condicional -> . boolOp
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) term -> . factor
    (19) boolean -> . TRUE
    (20) boolean -> . FALSE
    (21) boolOp -> . factor MAYORQUE factor
    (22) boolOp -> . factor MENORQUE factor
    (23) boolOp -> . factor MAYORIGUALQUE factor
    (24) boolOp -> . factor MENORIGUALQUE factor
    (25) boolOp -> . factor IGUALQUE factor
    (26) boolOp -> . factor DIFERENTEQUE factor
    (27) boolOp -> . factor ANDLOGICO factor
    (28) boolOp -> . factor ORLOGICO factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    RPAREN          shift and go to state 50
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    argumento                      shift and go to state 49
    expression                     shift and go to state 46
    cadena                         shift and go to state 10
    condicional                    shift and go to state 7
    term                           shift and go to state 12
    boolean                        shift and go to state 15
    boolOp                         shift and go to state 16
    factor                         shift and go to state 17

state 30

    (11) puts -> PUTS argumento .

    $end            reduce using rule 11 (puts -> PUTS argumento .)
    END             reduce using rule 11 (puts -> PUTS argumento .)


state 31

    (34) term -> term TIMES . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    factor                         shift and go to state 51

state 32

    (35) term -> term DIVIDE . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    factor                         shift and go to state 52

state 33

    (21) boolOp -> factor MAYORQUE . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    factor                         shift and go to state 53

state 34

    (22) boolOp -> factor MENORQUE . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    factor                         shift and go to state 54

state 35

    (23) boolOp -> factor MAYORIGUALQUE . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    factor                         shift and go to state 55

state 36

    (24) boolOp -> factor MENORIGUALQUE . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    factor                         shift and go to state 56

state 37

    (25) boolOp -> factor IGUALQUE . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    factor                         shift and go to state 57

state 38

    (26) boolOp -> factor DIFERENTEQUE . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    factor                         shift and go to state 58

state 39

    (27) boolOp -> factor ANDLOGICO . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    factor                         shift and go to state 59

state 40

    (28) boolOp -> factor ORLOGICO . factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    factor                         shift and go to state 60

state 41

    (4) sentencias -> IF LPAREN condicional . RPAREN sentencias END
    (5) sentencias -> IF LPAREN condicional . RPAREN THEN sentencias END

    RPAREN          shift and go to state 61


state 42

    (21) boolOp -> factor . MAYORQUE factor
    (22) boolOp -> factor . MENORQUE factor
    (23) boolOp -> factor . MAYORIGUALQUE factor
    (24) boolOp -> factor . MENORIGUALQUE factor
    (25) boolOp -> factor . IGUALQUE factor
    (26) boolOp -> factor . DIFERENTEQUE factor
    (27) boolOp -> factor . ANDLOGICO factor
    (28) boolOp -> factor . ORLOGICO factor

    MAYORQUE        shift and go to state 33
    MENORQUE        shift and go to state 34
    MAYORIGUALQUE   shift and go to state 35
    MENORIGUALQUE   shift and go to state 36
    IGUALQUE        shift and go to state 37
    DIFERENTEQUE    shift and go to state 38
    ANDLOGICO       shift and go to state 39
    ORLOGICO        shift and go to state 40


state 43

    (39) factor -> LPAREN expression RPAREN .

    MAYORQUE        reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    MENORQUE        reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    MAYORIGUALQUE   reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    MENORIGUALQUE   reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    IGUALQUE        reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    DIFERENTEQUE    reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    ANDLOGICO       reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    ORLOGICO        reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 39 (factor -> LPAREN expression RPAREN .)
    END             reduce using rule 39 (factor -> LPAREN expression RPAREN .)


state 44

    (6) impresion -> PRINT LPAREN argumento . RPAREN

    RPAREN          shift and go to state 62


state 45

    (8) impresion -> PRINT LPAREN RPAREN .

    $end            reduce using rule 8 (impresion -> PRINT LPAREN RPAREN .)
    END             reduce using rule 8 (impresion -> PRINT LPAREN RPAREN .)


state 46

    (39) factor -> LPAREN expression . RPAREN
    (14) argumento -> expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 43
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28

  ! RPAREN          [ reduce using rule 14 (argumento -> expression .) ]


state 47

    (31) expression -> expression PLUS term .
    (34) term -> term . TIMES factor
    (35) term -> term . DIVIDE factor

    PLUS            reduce using rule 31 (expression -> expression PLUS term .)
    MINUS           reduce using rule 31 (expression -> expression PLUS term .)
    $end            reduce using rule 31 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 31 (expression -> expression PLUS term .)
    END             reduce using rule 31 (expression -> expression PLUS term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 48

    (32) expression -> expression MINUS term .
    (34) term -> term . TIMES factor
    (35) term -> term . DIVIDE factor

    PLUS            reduce using rule 32 (expression -> expression MINUS term .)
    MINUS           reduce using rule 32 (expression -> expression MINUS term .)
    $end            reduce using rule 32 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 32 (expression -> expression MINUS term .)
    END             reduce using rule 32 (expression -> expression MINUS term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 49

    (10) puts -> PUTS LPAREN argumento . RPAREN

    RPAREN          shift and go to state 63


state 50

    (12) puts -> PUTS LPAREN RPAREN .

    $end            reduce using rule 12 (puts -> PUTS LPAREN RPAREN .)
    END             reduce using rule 12 (puts -> PUTS LPAREN RPAREN .)


state 51

    (34) term -> term TIMES factor .

    TIMES           reduce using rule 34 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 34 (term -> term TIMES factor .)
    PLUS            reduce using rule 34 (term -> term TIMES factor .)
    MINUS           reduce using rule 34 (term -> term TIMES factor .)
    $end            reduce using rule 34 (term -> term TIMES factor .)
    RPAREN          reduce using rule 34 (term -> term TIMES factor .)
    END             reduce using rule 34 (term -> term TIMES factor .)


state 52

    (35) term -> term DIVIDE factor .

    TIMES           reduce using rule 35 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 35 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 35 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 35 (term -> term DIVIDE factor .)
    $end            reduce using rule 35 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 35 (term -> term DIVIDE factor .)
    END             reduce using rule 35 (term -> term DIVIDE factor .)


state 53

    (21) boolOp -> factor MAYORQUE factor .

    $end            reduce using rule 21 (boolOp -> factor MAYORQUE factor .)
    END             reduce using rule 21 (boolOp -> factor MAYORQUE factor .)
    RPAREN          reduce using rule 21 (boolOp -> factor MAYORQUE factor .)


state 54

    (22) boolOp -> factor MENORQUE factor .

    $end            reduce using rule 22 (boolOp -> factor MENORQUE factor .)
    END             reduce using rule 22 (boolOp -> factor MENORQUE factor .)
    RPAREN          reduce using rule 22 (boolOp -> factor MENORQUE factor .)


state 55

    (23) boolOp -> factor MAYORIGUALQUE factor .

    $end            reduce using rule 23 (boolOp -> factor MAYORIGUALQUE factor .)
    END             reduce using rule 23 (boolOp -> factor MAYORIGUALQUE factor .)
    RPAREN          reduce using rule 23 (boolOp -> factor MAYORIGUALQUE factor .)


state 56

    (24) boolOp -> factor MENORIGUALQUE factor .

    $end            reduce using rule 24 (boolOp -> factor MENORIGUALQUE factor .)
    END             reduce using rule 24 (boolOp -> factor MENORIGUALQUE factor .)
    RPAREN          reduce using rule 24 (boolOp -> factor MENORIGUALQUE factor .)


state 57

    (25) boolOp -> factor IGUALQUE factor .

    $end            reduce using rule 25 (boolOp -> factor IGUALQUE factor .)
    END             reduce using rule 25 (boolOp -> factor IGUALQUE factor .)
    RPAREN          reduce using rule 25 (boolOp -> factor IGUALQUE factor .)


state 58

    (26) boolOp -> factor DIFERENTEQUE factor .

    $end            reduce using rule 26 (boolOp -> factor DIFERENTEQUE factor .)
    END             reduce using rule 26 (boolOp -> factor DIFERENTEQUE factor .)
    RPAREN          reduce using rule 26 (boolOp -> factor DIFERENTEQUE factor .)


state 59

    (27) boolOp -> factor ANDLOGICO factor .

    $end            reduce using rule 27 (boolOp -> factor ANDLOGICO factor .)
    END             reduce using rule 27 (boolOp -> factor ANDLOGICO factor .)
    RPAREN          reduce using rule 27 (boolOp -> factor ANDLOGICO factor .)


state 60

    (28) boolOp -> factor ORLOGICO factor .

    $end            reduce using rule 28 (boolOp -> factor ORLOGICO factor .)
    END             reduce using rule 28 (boolOp -> factor ORLOGICO factor .)
    RPAREN          reduce using rule 28 (boolOp -> factor ORLOGICO factor .)


state 61

    (4) sentencias -> IF LPAREN condicional RPAREN . sentencias END
    (5) sentencias -> IF LPAREN condicional RPAREN . THEN sentencias END
    (1) sentencias -> . impresion
    (2) sentencias -> . argumento
    (3) sentencias -> . puts
    (4) sentencias -> . IF LPAREN condicional RPAREN sentencias END
    (5) sentencias -> . IF LPAREN condicional RPAREN THEN sentencias END
    (6) impresion -> . PRINT LPAREN argumento RPAREN
    (7) impresion -> . PRINT argumento
    (8) impresion -> . PRINT LPAREN RPAREN
    (9) impresion -> . PRINT
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (16) argumento -> . condicional
    (10) puts -> . PUTS LPAREN argumento RPAREN
    (11) puts -> . PUTS argumento
    (12) puts -> . PUTS LPAREN RPAREN
    (13) puts -> . PUTS
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (29) cadena -> . STRING
    (30) cadena -> . STRINGCC
    (17) condicional -> . boolean
    (18) condicional -> . boolOp
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) term -> . factor
    (19) boolean -> . TRUE
    (20) boolean -> . FALSE
    (21) boolOp -> . factor MAYORQUE factor
    (22) boolOp -> . factor MENORQUE factor
    (23) boolOp -> . factor MAYORIGUALQUE factor
    (24) boolOp -> . factor MENORIGUALQUE factor
    (25) boolOp -> . factor IGUALQUE factor
    (26) boolOp -> . factor DIFERENTEQUE factor
    (27) boolOp -> . factor ANDLOGICO factor
    (28) boolOp -> . factor ORLOGICO factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    THEN            shift and go to state 65
    IF              shift and go to state 5
    PRINT           shift and go to state 8
    PUTS            shift and go to state 11
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    condicional                    shift and go to state 7
    sentencias                     shift and go to state 64
    impresion                      shift and go to state 2
    argumento                      shift and go to state 3
    puts                           shift and go to state 4
    expression                     shift and go to state 9
    cadena                         shift and go to state 10
    term                           shift and go to state 12
    boolean                        shift and go to state 15
    boolOp                         shift and go to state 16
    factor                         shift and go to state 17

state 62

    (6) impresion -> PRINT LPAREN argumento RPAREN .

    $end            reduce using rule 6 (impresion -> PRINT LPAREN argumento RPAREN .)
    END             reduce using rule 6 (impresion -> PRINT LPAREN argumento RPAREN .)


state 63

    (10) puts -> PUTS LPAREN argumento RPAREN .

    $end            reduce using rule 10 (puts -> PUTS LPAREN argumento RPAREN .)
    END             reduce using rule 10 (puts -> PUTS LPAREN argumento RPAREN .)


state 64

    (4) sentencias -> IF LPAREN condicional RPAREN sentencias . END

    END             shift and go to state 66


state 65

    (5) sentencias -> IF LPAREN condicional RPAREN THEN . sentencias END
    (1) sentencias -> . impresion
    (2) sentencias -> . argumento
    (3) sentencias -> . puts
    (4) sentencias -> . IF LPAREN condicional RPAREN sentencias END
    (5) sentencias -> . IF LPAREN condicional RPAREN THEN sentencias END
    (6) impresion -> . PRINT LPAREN argumento RPAREN
    (7) impresion -> . PRINT argumento
    (8) impresion -> . PRINT LPAREN RPAREN
    (9) impresion -> . PRINT
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (16) argumento -> . condicional
    (10) puts -> . PUTS LPAREN argumento RPAREN
    (11) puts -> . PUTS argumento
    (12) puts -> . PUTS LPAREN RPAREN
    (13) puts -> . PUTS
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . term
    (29) cadena -> . STRING
    (30) cadena -> . STRINGCC
    (17) condicional -> . boolean
    (18) condicional -> . boolOp
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) term -> . factor
    (19) boolean -> . TRUE
    (20) boolean -> . FALSE
    (21) boolOp -> . factor MAYORQUE factor
    (22) boolOp -> . factor MENORQUE factor
    (23) boolOp -> . factor MAYORIGUALQUE factor
    (24) boolOp -> . factor MENORIGUALQUE factor
    (25) boolOp -> . factor IGUALQUE factor
    (26) boolOp -> . factor DIFERENTEQUE factor
    (27) boolOp -> . factor ANDLOGICO factor
    (28) boolOp -> . factor ORLOGICO factor
    (37) factor -> . NUMBER
    (38) factor -> . ID
    (39) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 5
    PRINT           shift and go to state 8
    PUTS            shift and go to state 11
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    TRUE            shift and go to state 18
    FALSE           shift and go to state 19
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    LPAREN          shift and go to state 6

    condicional                    shift and go to state 7
    sentencias                     shift and go to state 67
    impresion                      shift and go to state 2
    argumento                      shift and go to state 3
    puts                           shift and go to state 4
    expression                     shift and go to state 9
    cadena                         shift and go to state 10
    term                           shift and go to state 12
    boolean                        shift and go to state 15
    boolOp                         shift and go to state 16
    factor                         shift and go to state 17

state 66

    (4) sentencias -> IF LPAREN condicional RPAREN sentencias END .

    $end            reduce using rule 4 (sentencias -> IF LPAREN condicional RPAREN sentencias END .)
    END             reduce using rule 4 (sentencias -> IF LPAREN condicional RPAREN sentencias END .)


state 67

    (5) sentencias -> IF LPAREN condicional RPAREN THEN sentencias . END

    END             shift and go to state 68


state 68

    (5) sentencias -> IF LPAREN condicional RPAREN THEN sentencias END .

    $end            reduce using rule 5 (sentencias -> IF LPAREN condicional RPAREN THEN sentencias END .)
    END             reduce using rule 5 (sentencias -> IF LPAREN condicional RPAREN THEN sentencias END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 46 resolved as shift
