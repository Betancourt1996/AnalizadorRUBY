Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    AND
    ANDLOGICO
    ASIGNACION
    ASIGNACIONDIVISION
    ASIGNACIONEXPONENCIAL
    ASIGNACIONMODULO
    ASIGNACIONPRODUCTO
    ASIGNACIONRESTA
    ASIGNACIONSUMA
    BREAK
    CADENATEXTO
    CARACTERX
    CASE
    CLASS
    CONCATSTR
    CONTROLX
    DEF
    DIFERENTEQUE
    DO
    ELSE
    ELSIF
    ENSURE
    ESCAPES
    ESPACIOBLANCO
    FALSE
    FICHAS
    FOR
    IGUALDADESTRICTA
    IGUALQUE
    IN
    MAYORIGUALQUE
    MENORIGUALQUE
    MENORQUE
    METACONTROLX
    MOD
    MODULE
    NEGACION
    NEXT
    NIL
    NOT
    NOTACIONHEXA
    NOTACIONOCTAL
    OR
    ORLOGICO
    PESTANAVERTICAL
    REDO
    RESCUE
    RETORNO
    RETRY
    RETURN
    SALTOLINEA
    SALTOPAGINA
    SELF
    SPACESHIP
    SUPER
    TRUE
    UNDEF
    UNLESS
    UNTIL
    WHEN
    WHILE
    YIELD
    _FILE_
    _LINE_

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> impresion
Rule 2     sentencias -> argumento
Rule 3     sentencias -> puts
Rule 4     sentencias -> IF LPAREN factor MAYORQUE factor RPAREN sentencias END
Rule 5     sentencias -> IF LPAREN factor MAYORQUE factor RPAREN THEN sentencias END
Rule 6     impresion -> PRINT LPAREN argumento RPAREN
Rule 7     impresion -> PRINT argumento
Rule 8     impresion -> PRINT LPAREN RPAREN
Rule 9     impresion -> PRINT
Rule 10    puts -> PUTS LPAREN argumento RPAREN
Rule 11    puts -> PUTS argumento
Rule 12    puts -> PUTS LPAREN RPAREN
Rule 13    puts -> PUTS
Rule 14    argumento -> expression
Rule 15    argumento -> cadena
Rule 16    cadena -> STRING
Rule 17    cadena -> STRINGCC
Rule 18    expression -> expression PLUS term
Rule 19    expression -> expression MINUS term
Rule 20    expression -> term
Rule 21    term -> term TIMES factor
Rule 22    term -> term DIVIDE factor
Rule 23    term -> factor
Rule 24    factor -> NUMBER
Rule 25    factor -> ID
Rule 26    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ALIAS                : 
AND                  : 
ANDLOGICO            : 
ASIGNACION           : 
ASIGNACIONDIVISION   : 
ASIGNACIONEXPONENCIAL : 
ASIGNACIONMODULO     : 
ASIGNACIONPRODUCTO   : 
ASIGNACIONRESTA      : 
ASIGNACIONSUMA       : 
BREAK                : 
CADENATEXTO          : 
CARACTERX            : 
CASE                 : 
CLASS                : 
CONCATSTR            : 
CONTROLX             : 
DEF                  : 
DIFERENTEQUE         : 
DIVIDE               : 22
DO                   : 
ELSE                 : 
ELSIF                : 
END                  : 4 5
ENSURE               : 
ESCAPES              : 
ESPACIOBLANCO        : 
FALSE                : 
FICHAS               : 
FOR                  : 
ID                   : 25
IF                   : 4 5
IGUALDADESTRICTA     : 
IGUALQUE             : 
IN                   : 
LPAREN               : 4 5 6 8 10 12 26
MAYORIGUALQUE        : 
MAYORQUE             : 4 5
MENORIGUALQUE        : 
MENORQUE             : 
METACONTROLX         : 
MINUS                : 19
MOD                  : 
MODULE               : 
NEGACION             : 
NEXT                 : 
NIL                  : 
NOT                  : 
NOTACIONHEXA         : 
NOTACIONOCTAL        : 
NUMBER               : 24
OR                   : 
ORLOGICO             : 
PESTANAVERTICAL      : 
PLUS                 : 18
PRINT                : 6 7 8 9
PUTS                 : 10 11 12 13
REDO                 : 
RESCUE               : 
RETORNO              : 
RETRY                : 
RETURN               : 
RPAREN               : 4 5 6 8 10 12 26
SALTOLINEA           : 
SALTOPAGINA          : 
SELF                 : 
SPACESHIP            : 
STRING               : 16
STRINGCC             : 17
SUPER                : 
THEN                 : 5
TIMES                : 21
TRUE                 : 
UNDEF                : 
UNLESS               : 
UNTIL                : 
WHEN                 : 
WHILE                : 
YIELD                : 
_FILE_               : 
_LINE_               : 
error                : 

Nonterminals, with rules where they appear

argumento            : 2 6 7 10 11
cadena               : 15
expression           : 14 18 19 26
factor               : 4 4 5 5 21 22 23
impresion            : 1
puts                 : 3
sentencias           : 4 5 0
term                 : 18 19 20 21 22

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . impresion
    (2) sentencias -> . argumento
    (3) sentencias -> . puts
    (4) sentencias -> . IF LPAREN factor MAYORQUE factor RPAREN sentencias END
    (5) sentencias -> . IF LPAREN factor MAYORQUE factor RPAREN THEN sentencias END
    (6) impresion -> . PRINT LPAREN argumento RPAREN
    (7) impresion -> . PRINT argumento
    (8) impresion -> . PRINT LPAREN RPAREN
    (9) impresion -> . PRINT
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (10) puts -> . PUTS LPAREN argumento RPAREN
    (11) puts -> . PUTS argumento
    (12) puts -> . PUTS LPAREN RPAREN
    (13) puts -> . PUTS
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (16) cadena -> . STRING
    (17) cadena -> . STRINGCC
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 5
    PRINT           shift and go to state 8
    PUTS            shift and go to state 11
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 6

    sentencias                     shift and go to state 1
    impresion                      shift and go to state 2
    argumento                      shift and go to state 3
    puts                           shift and go to state 4
    factor                         shift and go to state 7
    expression                     shift and go to state 9
    cadena                         shift and go to state 10
    term                           shift and go to state 12

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> impresion .

    $end            reduce using rule 1 (sentencias -> impresion .)
    END             reduce using rule 1 (sentencias -> impresion .)


state 3

    (2) sentencias -> argumento .

    $end            reduce using rule 2 (sentencias -> argumento .)
    END             reduce using rule 2 (sentencias -> argumento .)


state 4

    (3) sentencias -> puts .

    $end            reduce using rule 3 (sentencias -> puts .)
    END             reduce using rule 3 (sentencias -> puts .)


state 5

    (4) sentencias -> IF . LPAREN factor MAYORQUE factor RPAREN sentencias END
    (5) sentencias -> IF . LPAREN factor MAYORQUE factor RPAREN THEN sentencias END

    LPAREN          shift and go to state 17


state 6

    (26) factor -> LPAREN . expression RPAREN
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 6

    expression                     shift and go to state 18
    term                           shift and go to state 12
    factor                         shift and go to state 7

state 7

    (23) term -> factor .

    TIMES           reduce using rule 23 (term -> factor .)
    DIVIDE          reduce using rule 23 (term -> factor .)
    PLUS            reduce using rule 23 (term -> factor .)
    MINUS           reduce using rule 23 (term -> factor .)
    $end            reduce using rule 23 (term -> factor .)
    RPAREN          reduce using rule 23 (term -> factor .)
    END             reduce using rule 23 (term -> factor .)


state 8

    (6) impresion -> PRINT . LPAREN argumento RPAREN
    (7) impresion -> PRINT . argumento
    (8) impresion -> PRINT . LPAREN RPAREN
    (9) impresion -> PRINT .
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (16) cadena -> . STRING
    (17) cadena -> . STRINGCC
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 19
    $end            reduce using rule 9 (impresion -> PRINT .)
    END             reduce using rule 9 (impresion -> PRINT .)
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    NUMBER          shift and go to state 15
    ID              shift and go to state 16

    argumento                      shift and go to state 20
    expression                     shift and go to state 9
    cadena                         shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 7

state 9

    (14) argumento -> expression .
    (18) expression -> expression . PLUS term
    (19) expression -> expression . MINUS term

    $end            reduce using rule 14 (argumento -> expression .)
    END             reduce using rule 14 (argumento -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22


state 10

    (15) argumento -> cadena .

    $end            reduce using rule 15 (argumento -> cadena .)
    END             reduce using rule 15 (argumento -> cadena .)
    RPAREN          reduce using rule 15 (argumento -> cadena .)


state 11

    (10) puts -> PUTS . LPAREN argumento RPAREN
    (11) puts -> PUTS . argumento
    (12) puts -> PUTS . LPAREN RPAREN
    (13) puts -> PUTS .
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (16) cadena -> . STRING
    (17) cadena -> . STRINGCC
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 23
    $end            reduce using rule 13 (puts -> PUTS .)
    END             reduce using rule 13 (puts -> PUTS .)
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    NUMBER          shift and go to state 15
    ID              shift and go to state 16

    argumento                      shift and go to state 24
    expression                     shift and go to state 9
    cadena                         shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 7

state 12

    (20) expression -> term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

    PLUS            reduce using rule 20 (expression -> term .)
    MINUS           reduce using rule 20 (expression -> term .)
    $end            reduce using rule 20 (expression -> term .)
    RPAREN          reduce using rule 20 (expression -> term .)
    END             reduce using rule 20 (expression -> term .)
    TIMES           shift and go to state 25
    DIVIDE          shift and go to state 26


state 13

    (16) cadena -> STRING .

    $end            reduce using rule 16 (cadena -> STRING .)
    END             reduce using rule 16 (cadena -> STRING .)
    RPAREN          reduce using rule 16 (cadena -> STRING .)


state 14

    (17) cadena -> STRINGCC .

    $end            reduce using rule 17 (cadena -> STRINGCC .)
    END             reduce using rule 17 (cadena -> STRINGCC .)
    RPAREN          reduce using rule 17 (cadena -> STRINGCC .)


state 15

    (24) factor -> NUMBER .

    TIMES           reduce using rule 24 (factor -> NUMBER .)
    DIVIDE          reduce using rule 24 (factor -> NUMBER .)
    PLUS            reduce using rule 24 (factor -> NUMBER .)
    MINUS           reduce using rule 24 (factor -> NUMBER .)
    $end            reduce using rule 24 (factor -> NUMBER .)
    RPAREN          reduce using rule 24 (factor -> NUMBER .)
    END             reduce using rule 24 (factor -> NUMBER .)
    MAYORQUE        reduce using rule 24 (factor -> NUMBER .)


state 16

    (25) factor -> ID .

    TIMES           reduce using rule 25 (factor -> ID .)
    DIVIDE          reduce using rule 25 (factor -> ID .)
    PLUS            reduce using rule 25 (factor -> ID .)
    MINUS           reduce using rule 25 (factor -> ID .)
    $end            reduce using rule 25 (factor -> ID .)
    RPAREN          reduce using rule 25 (factor -> ID .)
    END             reduce using rule 25 (factor -> ID .)
    MAYORQUE        reduce using rule 25 (factor -> ID .)


state 17

    (4) sentencias -> IF LPAREN . factor MAYORQUE factor RPAREN sentencias END
    (5) sentencias -> IF LPAREN . factor MAYORQUE factor RPAREN THEN sentencias END
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 6

    factor                         shift and go to state 27

state 18

    (26) factor -> LPAREN expression . RPAREN
    (18) expression -> expression . PLUS term
    (19) expression -> expression . MINUS term

    RPAREN          shift and go to state 28
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22


state 19

    (6) impresion -> PRINT LPAREN . argumento RPAREN
    (8) impresion -> PRINT LPAREN . RPAREN
    (26) factor -> LPAREN . expression RPAREN
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (16) cadena -> . STRING
    (17) cadena -> . STRINGCC
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    RPAREN          shift and go to state 30
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 6

    argumento                      shift and go to state 29
    expression                     shift and go to state 31
    cadena                         shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 7

state 20

    (7) impresion -> PRINT argumento .

    $end            reduce using rule 7 (impresion -> PRINT argumento .)
    END             reduce using rule 7 (impresion -> PRINT argumento .)


state 21

    (18) expression -> expression PLUS . term
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 6

    term                           shift and go to state 32
    factor                         shift and go to state 7

state 22

    (19) expression -> expression MINUS . term
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 6

    term                           shift and go to state 33
    factor                         shift and go to state 7

state 23

    (10) puts -> PUTS LPAREN . argumento RPAREN
    (12) puts -> PUTS LPAREN . RPAREN
    (26) factor -> LPAREN . expression RPAREN
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (16) cadena -> . STRING
    (17) cadena -> . STRINGCC
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    RPAREN          shift and go to state 35
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 6

    argumento                      shift and go to state 34
    expression                     shift and go to state 31
    cadena                         shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 7

state 24

    (11) puts -> PUTS argumento .

    $end            reduce using rule 11 (puts -> PUTS argumento .)
    END             reduce using rule 11 (puts -> PUTS argumento .)


state 25

    (21) term -> term TIMES . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 6

    factor                         shift and go to state 36

state 26

    (22) term -> term DIVIDE . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 6

    factor                         shift and go to state 37

state 27

    (4) sentencias -> IF LPAREN factor . MAYORQUE factor RPAREN sentencias END
    (5) sentencias -> IF LPAREN factor . MAYORQUE factor RPAREN THEN sentencias END

    MAYORQUE        shift and go to state 38


state 28

    (26) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    END             reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MAYORQUE        reduce using rule 26 (factor -> LPAREN expression RPAREN .)


state 29

    (6) impresion -> PRINT LPAREN argumento . RPAREN

    RPAREN          shift and go to state 39


state 30

    (8) impresion -> PRINT LPAREN RPAREN .

    $end            reduce using rule 8 (impresion -> PRINT LPAREN RPAREN .)
    END             reduce using rule 8 (impresion -> PRINT LPAREN RPAREN .)


state 31

    (26) factor -> LPAREN expression . RPAREN
    (14) argumento -> expression .
    (18) expression -> expression . PLUS term
    (19) expression -> expression . MINUS term

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 28
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

  ! RPAREN          [ reduce using rule 14 (argumento -> expression .) ]


state 32

    (18) expression -> expression PLUS term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

    PLUS            reduce using rule 18 (expression -> expression PLUS term .)
    MINUS           reduce using rule 18 (expression -> expression PLUS term .)
    $end            reduce using rule 18 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 18 (expression -> expression PLUS term .)
    END             reduce using rule 18 (expression -> expression PLUS term .)
    TIMES           shift and go to state 25
    DIVIDE          shift and go to state 26


state 33

    (19) expression -> expression MINUS term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

    PLUS            reduce using rule 19 (expression -> expression MINUS term .)
    MINUS           reduce using rule 19 (expression -> expression MINUS term .)
    $end            reduce using rule 19 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 19 (expression -> expression MINUS term .)
    END             reduce using rule 19 (expression -> expression MINUS term .)
    TIMES           shift and go to state 25
    DIVIDE          shift and go to state 26


state 34

    (10) puts -> PUTS LPAREN argumento . RPAREN

    RPAREN          shift and go to state 40


state 35

    (12) puts -> PUTS LPAREN RPAREN .

    $end            reduce using rule 12 (puts -> PUTS LPAREN RPAREN .)
    END             reduce using rule 12 (puts -> PUTS LPAREN RPAREN .)


state 36

    (21) term -> term TIMES factor .

    TIMES           reduce using rule 21 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 21 (term -> term TIMES factor .)
    PLUS            reduce using rule 21 (term -> term TIMES factor .)
    MINUS           reduce using rule 21 (term -> term TIMES factor .)
    $end            reduce using rule 21 (term -> term TIMES factor .)
    RPAREN          reduce using rule 21 (term -> term TIMES factor .)
    END             reduce using rule 21 (term -> term TIMES factor .)


state 37

    (22) term -> term DIVIDE factor .

    TIMES           reduce using rule 22 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 22 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 22 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 22 (term -> term DIVIDE factor .)
    $end            reduce using rule 22 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 22 (term -> term DIVIDE factor .)
    END             reduce using rule 22 (term -> term DIVIDE factor .)


state 38

    (4) sentencias -> IF LPAREN factor MAYORQUE . factor RPAREN sentencias END
    (5) sentencias -> IF LPAREN factor MAYORQUE . factor RPAREN THEN sentencias END
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 6

    factor                         shift and go to state 41

state 39

    (6) impresion -> PRINT LPAREN argumento RPAREN .

    $end            reduce using rule 6 (impresion -> PRINT LPAREN argumento RPAREN .)
    END             reduce using rule 6 (impresion -> PRINT LPAREN argumento RPAREN .)


state 40

    (10) puts -> PUTS LPAREN argumento RPAREN .

    $end            reduce using rule 10 (puts -> PUTS LPAREN argumento RPAREN .)
    END             reduce using rule 10 (puts -> PUTS LPAREN argumento RPAREN .)


state 41

    (4) sentencias -> IF LPAREN factor MAYORQUE factor . RPAREN sentencias END
    (5) sentencias -> IF LPAREN factor MAYORQUE factor . RPAREN THEN sentencias END

    RPAREN          shift and go to state 42


state 42

    (4) sentencias -> IF LPAREN factor MAYORQUE factor RPAREN . sentencias END
    (5) sentencias -> IF LPAREN factor MAYORQUE factor RPAREN . THEN sentencias END
    (1) sentencias -> . impresion
    (2) sentencias -> . argumento
    (3) sentencias -> . puts
    (4) sentencias -> . IF LPAREN factor MAYORQUE factor RPAREN sentencias END
    (5) sentencias -> . IF LPAREN factor MAYORQUE factor RPAREN THEN sentencias END
    (6) impresion -> . PRINT LPAREN argumento RPAREN
    (7) impresion -> . PRINT argumento
    (8) impresion -> . PRINT LPAREN RPAREN
    (9) impresion -> . PRINT
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (10) puts -> . PUTS LPAREN argumento RPAREN
    (11) puts -> . PUTS argumento
    (12) puts -> . PUTS LPAREN RPAREN
    (13) puts -> . PUTS
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (16) cadena -> . STRING
    (17) cadena -> . STRINGCC
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    THEN            shift and go to state 44
    IF              shift and go to state 5
    PRINT           shift and go to state 8
    PUTS            shift and go to state 11
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 6

    factor                         shift and go to state 7
    sentencias                     shift and go to state 43
    impresion                      shift and go to state 2
    argumento                      shift and go to state 3
    puts                           shift and go to state 4
    expression                     shift and go to state 9
    cadena                         shift and go to state 10
    term                           shift and go to state 12

state 43

    (4) sentencias -> IF LPAREN factor MAYORQUE factor RPAREN sentencias . END

    END             shift and go to state 45


state 44

    (5) sentencias -> IF LPAREN factor MAYORQUE factor RPAREN THEN . sentencias END
    (1) sentencias -> . impresion
    (2) sentencias -> . argumento
    (3) sentencias -> . puts
    (4) sentencias -> . IF LPAREN factor MAYORQUE factor RPAREN sentencias END
    (5) sentencias -> . IF LPAREN factor MAYORQUE factor RPAREN THEN sentencias END
    (6) impresion -> . PRINT LPAREN argumento RPAREN
    (7) impresion -> . PRINT argumento
    (8) impresion -> . PRINT LPAREN RPAREN
    (9) impresion -> . PRINT
    (14) argumento -> . expression
    (15) argumento -> . cadena
    (10) puts -> . PUTS LPAREN argumento RPAREN
    (11) puts -> . PUTS argumento
    (12) puts -> . PUTS LPAREN RPAREN
    (13) puts -> . PUTS
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (16) cadena -> . STRING
    (17) cadena -> . STRINGCC
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 5
    PRINT           shift and go to state 8
    PUTS            shift and go to state 11
    STRING          shift and go to state 13
    STRINGCC        shift and go to state 14
    NUMBER          shift and go to state 15
    ID              shift and go to state 16
    LPAREN          shift and go to state 6

    factor                         shift and go to state 7
    sentencias                     shift and go to state 46
    impresion                      shift and go to state 2
    argumento                      shift and go to state 3
    puts                           shift and go to state 4
    expression                     shift and go to state 9
    cadena                         shift and go to state 10
    term                           shift and go to state 12

state 45

    (4) sentencias -> IF LPAREN factor MAYORQUE factor RPAREN sentencias END .

    $end            reduce using rule 4 (sentencias -> IF LPAREN factor MAYORQUE factor RPAREN sentencias END .)
    END             reduce using rule 4 (sentencias -> IF LPAREN factor MAYORQUE factor RPAREN sentencias END .)


state 46

    (5) sentencias -> IF LPAREN factor MAYORQUE factor RPAREN THEN sentencias . END

    END             shift and go to state 47


state 47

    (5) sentencias -> IF LPAREN factor MAYORQUE factor RPAREN THEN sentencias END .

    $end            reduce using rule 5 (sentencias -> IF LPAREN factor MAYORQUE factor RPAREN THEN sentencias END .)
    END             reduce using rule 5 (sentencias -> IF LPAREN factor MAYORQUE factor RPAREN THEN sentencias END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 31 resolved as shift
