
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ANDLOGICO ASIGNACION ASIGNACIONDIVISION ASIGNACIONEXPONENCIAL ASIGNACIONMODULO ASIGNACIONPRODUCTO ASIGNACIONRESTA ASIGNACIONSUMA BREAK CADENATEXTO CARACTERX CASE CLASS CONCATSTR CONTROLX DEF DIFERENTEQUE DIVIDE DO DOBLEPUNTO ELSE ELSEIF ELSIF END ENSURE ESCAPES ESPACIOBLANCO FALSE FICHAS FOR ID IF IGUALDADESTRICTA IGUALQUE IN LPAREN MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE METACONTROLX MINUS MOD MODULE NEGACION NEXT NIL NOT NOTACIONHEXA NOTACIONOCTAL NUMBER OR ORLOGICO PESTANAVERTICAL PLUS PRINT PUTS REDO RESCUE RETORNO RETRY RETURN RPAREN SALTOLINEA SALTOPAGINA SELF SPACESHIP STRING STRINGCC SUPER THEN TIMES TRUE UNDEF UNLESS UNTIL WHEN WHILE YIELD _FILE_ _LINE_sentencias : impresion\n                    | argumento\n                    | putssentencias : IF LPAREN condicional RPAREN sentencias END\n                  | IF LPAREN condicional RPAREN THEN sentencias END\n                  | IF LPAREN condicional RPAREN  sentencias elseifanidado ELSE sentencias ENDsentencias : UNLESS LPAREN condicional RPAREN sentencias END\n                  | UNLESS LPAREN condicional RPAREN THEN sentencias END\n                  | UNLESS LPAREN condicional RPAREN sentencias elseifanidado  ELSE sentencias ENDempty :elseifanidado : ELSEIF sentencias\n                    | ELSEIF sentencias elseifanidado\n                    | emptysentencias : UNTIL LPAREN condicional RPAREN DO sentencias END\n                      | UNTIL  condicional  DO sentencias END\n                      | UNTIL LPAREN condicional RPAREN  sentencias END\n                      | UNTIL  condicional   sentencias ENDsentencias : WHILE LPAREN condicional RPAREN DO sentencias END\n                      | WHILE  condicional  DO sentencias END\n                      | WHILE LPAREN condicional RPAREN  sentencias END\n                      | WHILE  condicional   sentencias ENDsentencias : FOR ID IN iterable sentencias END\n                  | FOR ID IN iterable DO sentencias ENDimpresion : PRINT LPAREN argumento RPAREN\n                  | PRINT argumento\n                  | PRINT LPAREN RPAREN\n                  | PRINT puts : PUTS LPAREN argumento RPAREN\n                  | PUTS argumento\n                  | PUTS LPAREN RPAREN\n                  | PUTS argumento : expression\n                  | cadena\n                  | condicionaliterable : expression DOBLEPUNTO expressioncondicional : boolean\n                 | boolOpboolean : TRUE\n               | FALSEboolOp : factor MAYORQUE factor\n                   | factor MENORQUE factor\n                   | factor MAYORIGUALQUE factor\n                   | factor MENORIGUALQUE factor\n                   | factor IGUALQUE factor\n                   | factor DIFERENTEQUE factor\n                   | factor ANDLOGICO factor\n                   | factor ORLOGICO factorcadena : STRING\n               | STRINGCCexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : factorfactor : NUMBERfactor : IDfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'IF':([0,12,17,20,21,23,24,25,28,31,34,53,57,60,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,107,119,120,123,],[5,-57,-52,-36,-37,-38,-39,-56,-55,5,5,-58,5,5,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,5,5,5,5,5,5,5,5,5,5,5,-35,5,5,]),'UNLESS':([0,12,17,20,21,23,24,25,28,31,34,53,57,60,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,107,119,120,123,],[8,-57,-52,-36,-37,-38,-39,-56,-55,8,8,-58,8,8,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,8,8,8,8,8,8,8,8,8,8,8,-35,8,8,]),'UNTIL':([0,12,17,20,21,23,24,25,28,31,34,53,57,60,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,107,119,120,123,],[9,-57,-52,-36,-37,-38,-39,-56,-55,9,9,-58,9,9,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,9,9,9,9,9,9,9,9,9,9,9,-35,9,9,]),'WHILE':([0,12,17,20,21,23,24,25,28,31,34,53,57,60,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,107,119,120,123,],[10,-57,-52,-36,-37,-38,-39,-56,-55,10,10,-58,10,10,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,10,10,10,10,10,10,10,10,10,10,10,-35,10,10,]),'FOR':([0,12,17,20,21,23,24,25,28,31,34,53,57,60,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,107,119,120,123,],[11,-57,-52,-36,-37,-38,-39,-56,-55,11,11,-58,11,11,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,11,11,11,11,11,11,11,11,11,11,11,-35,11,11,]),'PRINT':([0,12,17,20,21,23,24,25,28,31,34,53,57,60,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,107,119,120,123,],[13,-57,-52,-36,-37,-38,-39,-56,-55,13,13,-58,13,13,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,13,13,13,13,13,13,13,13,13,13,13,-35,13,13,]),'PUTS':([0,12,17,20,21,23,24,25,28,31,34,53,57,60,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,107,119,120,123,],[16,-57,-52,-36,-37,-38,-39,-56,-55,16,16,-58,16,16,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,16,16,16,16,16,16,16,16,16,16,16,-35,16,16,]),'STRING':([0,12,13,16,17,20,21,23,24,25,28,31,34,36,40,53,57,60,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,107,119,120,123,],[18,-57,18,18,-52,-36,-37,-38,-39,-56,-55,18,18,18,18,-58,18,18,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,18,18,18,18,18,18,18,18,18,18,18,-35,18,18,]),'STRINGCC':([0,12,13,16,17,20,21,23,24,25,28,31,34,36,40,53,57,60,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,107,119,120,123,],[19,-57,19,19,-52,-36,-37,-38,-39,-56,-55,19,19,19,19,-58,19,19,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,19,19,19,19,19,19,19,19,19,19,19,-35,19,19,]),'TRUE':([0,9,10,12,13,16,17,20,21,23,24,25,26,28,29,30,31,33,34,36,40,53,57,60,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,107,119,120,123,],[23,23,23,-57,23,23,-52,-36,-37,-38,-39,-56,23,-55,23,23,23,23,23,23,23,-58,23,23,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,23,23,23,23,23,23,23,23,23,23,23,-35,23,23,]),'FALSE':([0,9,10,12,13,16,17,20,21,23,24,25,26,28,29,30,31,33,34,36,40,53,57,60,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,107,119,120,123,],[24,24,24,-57,24,24,-52,-36,-37,-38,-39,-56,24,-55,24,24,24,24,24,24,24,-58,24,24,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,24,24,24,24,24,24,24,24,24,24,24,-35,24,24,]),'NUMBER':([0,6,9,10,12,13,16,17,20,21,23,24,25,26,28,29,30,31,33,34,36,38,39,40,42,43,44,45,46,47,48,49,50,51,53,57,60,62,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,104,107,119,120,123,],[25,25,25,25,-57,25,25,-52,-36,-37,-38,-39,-56,25,-55,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-58,25,25,25,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,25,25,25,25,25,25,25,25,25,25,25,25,-35,25,25,]),'ID':([0,6,9,10,11,12,13,16,17,20,21,23,24,25,26,28,29,30,31,33,34,36,38,39,40,42,43,44,45,46,47,48,49,50,51,53,57,60,62,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,104,107,119,120,123,],[12,12,12,12,35,-57,12,12,-52,-36,-37,-38,-39,-56,12,-55,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-58,12,12,12,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,12,12,12,12,12,12,12,12,12,12,12,12,-35,12,12,]),'LPAREN':([0,5,6,8,9,10,12,13,16,17,20,21,23,24,25,26,28,29,30,31,33,34,36,38,39,40,42,43,44,45,46,47,48,49,50,51,53,57,60,62,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,88,93,95,96,99,103,104,107,119,120,123,],[6,26,6,29,30,33,-57,36,40,-52,-36,-37,-38,-39,-56,6,-55,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-58,6,6,6,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,6,6,6,6,6,6,6,6,6,6,6,6,-35,6,6,]),'$end':([1,2,3,4,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,37,41,53,64,66,67,69,70,71,72,73,74,75,76,77,78,79,84,87,90,91,98,101,105,110,114,116,117,122,124,125,126,127,131,132,],[0,-1,-2,-3,-34,-57,-27,-32,-33,-31,-52,-48,-49,-36,-37,-55,-38,-39,-56,-55,-25,-29,-58,-26,-50,-51,-30,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,-17,-21,-24,-28,-15,-19,-4,-7,-16,-20,-22,-5,-8,-14,-18,-23,-6,-9,]),'END':([2,3,4,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,37,41,53,58,61,64,66,67,69,70,71,72,73,74,75,76,77,78,79,83,84,86,87,90,91,92,94,97,98,100,101,102,105,109,110,112,113,114,115,116,117,118,122,124,125,126,127,128,130,131,132,],[-1,-2,-3,-34,-57,-27,-32,-33,-31,-52,-48,-49,-36,-37,-55,-38,-39,-56,-55,-25,-29,-58,84,87,-26,-50,-51,-30,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,98,-17,101,-21,-24,-28,105,110,114,-15,116,-19,117,-4,122,-7,124,125,-16,126,-20,-22,127,-5,-8,-14,-18,-23,131,132,-6,-9,]),'ELSEIF':([2,3,4,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,37,41,53,64,66,67,69,70,71,72,73,74,75,76,77,78,79,84,87,90,91,92,94,98,101,105,110,114,116,117,121,122,124,125,126,127,131,132,],[-1,-2,-3,-34,-57,-27,-32,-33,-31,-52,-48,-49,-36,-37,-55,-38,-39,-56,-55,-25,-29,-58,-26,-50,-51,-30,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,-17,-21,-24,-28,107,107,-15,-19,-4,-7,-16,-20,-22,107,-5,-8,-14,-18,-23,-6,-9,]),'ELSE':([2,3,4,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,37,41,53,64,66,67,69,70,71,72,73,74,75,76,77,78,79,84,87,90,91,92,94,98,101,105,106,108,110,111,114,116,117,121,122,124,125,126,127,129,131,132,],[-1,-2,-3,-34,-57,-27,-32,-33,-31,-52,-48,-49,-36,-37,-55,-38,-39,-56,-55,-25,-29,-58,-26,-50,-51,-30,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,-17,-21,-24,-28,-10,-10,-15,-19,-4,120,-13,-7,123,-16,-20,-22,-10,-5,-8,-14,-18,-23,-12,-6,-9,]),'RPAREN':([7,12,15,17,18,19,20,21,22,23,24,25,27,28,36,40,52,53,54,55,56,59,63,65,66,67,68,70,71,72,73,74,75,76,77,78,79,],[-34,-57,-33,-52,-48,-49,-36,-37,-55,-38,-39,-56,53,-55,64,69,80,-58,81,82,-55,85,90,53,-50,-51,91,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,]),'MAYORQUE':([12,22,25,32,53,56,],[-57,44,-56,44,-58,44,]),'MENORQUE':([12,22,25,32,53,56,],[-57,45,-56,45,-58,45,]),'MAYORIGUALQUE':([12,22,25,32,53,56,],[-57,46,-56,46,-58,46,]),'MENORIGUALQUE':([12,22,25,32,53,56,],[-57,47,-56,47,-58,47,]),'IGUALQUE':([12,22,25,32,53,56,],[-57,48,-56,48,-58,48,]),'DIFERENTEQUE':([12,22,25,32,53,56,],[-57,49,-56,49,-58,49,]),'ANDLOGICO':([12,22,25,32,53,56,],[-57,50,-56,50,-58,50,]),'ORLOGICO':([12,22,25,32,53,56,],[-57,51,-56,51,-58,51,]),'TIMES':([12,17,22,25,28,53,56,66,67,70,71,],[-57,42,-55,-56,-55,-58,-55,42,42,-53,-54,]),'DIVIDE':([12,17,22,25,28,53,56,66,67,70,71,],[-57,43,-55,-56,-55,-58,-55,43,43,-53,-54,]),'PLUS':([12,14,17,22,25,27,28,53,56,65,66,67,70,71,89,119,],[-57,38,-52,-55,-56,38,-55,-58,-55,38,-50,-51,-53,-54,38,38,]),'MINUS':([12,14,17,22,25,27,28,53,56,65,66,67,70,71,89,119,],[-57,39,-52,-55,-56,39,-55,-58,-55,39,-50,-51,-53,-54,39,39,]),'DOBLEPUNTO':([12,17,25,28,53,66,67,70,71,89,],[-57,-52,-56,-55,-58,-50,-51,-53,-54,104,]),'DO':([12,17,20,21,23,24,25,28,31,34,53,66,67,70,71,72,73,74,75,76,77,78,79,82,85,88,119,],[-57,-52,-36,-37,-38,-39,-56,-55,57,60,-58,-50,-51,-53,-54,-40,-41,-42,-43,-44,-45,-46,-47,96,99,103,-35,]),'IN':([35,],[62,]),'THEN':([80,81,],[93,95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencias':([0,31,34,57,60,80,81,82,85,88,93,95,96,99,103,107,120,123,],[1,58,61,83,86,92,94,97,100,102,109,112,113,115,118,121,128,130,]),'impresion':([0,31,34,57,60,80,81,82,85,88,93,95,96,99,103,107,120,123,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'argumento':([0,13,16,31,34,36,40,57,60,80,81,82,85,88,93,95,96,99,103,107,120,123,],[3,37,41,3,3,63,68,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'puts':([0,31,34,57,60,80,81,82,85,88,93,95,96,99,103,107,120,123,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'condicional':([0,9,10,13,16,26,29,30,31,33,34,36,40,57,60,80,81,82,85,88,93,95,96,99,103,107,120,123,],[7,31,34,7,7,52,54,55,7,59,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expression':([0,6,13,16,30,31,33,34,36,40,57,60,62,80,81,82,85,88,93,95,96,99,103,104,107,120,123,],[14,27,14,14,27,14,27,14,65,65,14,14,89,14,14,14,14,14,14,14,14,14,14,119,14,14,14,]),'cadena':([0,13,16,31,34,36,40,57,60,80,81,82,85,88,93,95,96,99,103,107,120,123,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'term':([0,6,13,16,30,31,33,34,36,38,39,40,57,60,62,80,81,82,85,88,93,95,96,99,103,104,107,120,123,],[17,17,17,17,17,17,17,17,17,66,67,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'boolean':([0,9,10,13,16,26,29,30,31,33,34,36,40,57,60,80,81,82,85,88,93,95,96,99,103,107,120,123,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'boolOp':([0,9,10,13,16,26,29,30,31,33,34,36,40,57,60,80,81,82,85,88,93,95,96,99,103,107,120,123,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'factor':([0,6,9,10,13,16,26,29,30,31,33,34,36,38,39,40,42,43,44,45,46,47,48,49,50,51,57,60,62,80,81,82,85,88,93,95,96,99,103,104,107,120,123,],[22,28,32,32,22,22,32,32,56,22,56,22,22,28,28,22,70,71,72,73,74,75,76,77,78,79,22,22,28,22,22,22,22,22,22,22,22,22,22,28,22,22,22,]),'iterable':([62,],[88,]),'elseifanidado':([92,94,121,],[106,111,129,]),'empty':([92,94,121,],[108,108,108,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencias","S'",1,None,None,None),
  ('sentencias -> impresion','sentencias',1,'p_sentencias','sintactico.py',7),
  ('sentencias -> argumento','sentencias',1,'p_sentencias','sintactico.py',8),
  ('sentencias -> puts','sentencias',1,'p_sentencias','sintactico.py',9),
  ('sentencias -> IF LPAREN condicional RPAREN sentencias END','sentencias',6,'p_sentencias_if','sintactico.py',11),
  ('sentencias -> IF LPAREN condicional RPAREN THEN sentencias END','sentencias',7,'p_sentencias_if','sintactico.py',12),
  ('sentencias -> IF LPAREN condicional RPAREN sentencias elseifanidado ELSE sentencias END','sentencias',9,'p_sentencias_if','sintactico.py',13),
  ('sentencias -> UNLESS LPAREN condicional RPAREN sentencias END','sentencias',6,'p_sentencias_unless','sintactico.py',15),
  ('sentencias -> UNLESS LPAREN condicional RPAREN THEN sentencias END','sentencias',7,'p_sentencias_unless','sintactico.py',16),
  ('sentencias -> UNLESS LPAREN condicional RPAREN sentencias elseifanidado ELSE sentencias END','sentencias',9,'p_sentencias_unless','sintactico.py',17),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',19),
  ('elseifanidado -> ELSEIF sentencias','elseifanidado',2,'p_elseifanidado','sintactico.py',22),
  ('elseifanidado -> ELSEIF sentencias elseifanidado','elseifanidado',3,'p_elseifanidado','sintactico.py',23),
  ('elseifanidado -> empty','elseifanidado',1,'p_elseifanidado','sintactico.py',24),
  ('sentencias -> UNTIL LPAREN condicional RPAREN DO sentencias END','sentencias',7,'p_sentencias_until','sintactico.py',30),
  ('sentencias -> UNTIL condicional DO sentencias END','sentencias',5,'p_sentencias_until','sintactico.py',31),
  ('sentencias -> UNTIL LPAREN condicional RPAREN sentencias END','sentencias',6,'p_sentencias_until','sintactico.py',32),
  ('sentencias -> UNTIL condicional sentencias END','sentencias',4,'p_sentencias_until','sintactico.py',33),
  ('sentencias -> WHILE LPAREN condicional RPAREN DO sentencias END','sentencias',7,'p_sentencias_while','sintactico.py',35),
  ('sentencias -> WHILE condicional DO sentencias END','sentencias',5,'p_sentencias_while','sintactico.py',36),
  ('sentencias -> WHILE LPAREN condicional RPAREN sentencias END','sentencias',6,'p_sentencias_while','sintactico.py',37),
  ('sentencias -> WHILE condicional sentencias END','sentencias',4,'p_sentencias_while','sintactico.py',38),
  ('sentencias -> FOR ID IN iterable sentencias END','sentencias',6,'p_sentencias_for','sintactico.py',40),
  ('sentencias -> FOR ID IN iterable DO sentencias END','sentencias',7,'p_sentencias_for','sintactico.py',41),
  ('impresion -> PRINT LPAREN argumento RPAREN','impresion',4,'p_impresion','sintactico.py',43),
  ('impresion -> PRINT argumento','impresion',2,'p_impresion','sintactico.py',44),
  ('impresion -> PRINT LPAREN RPAREN','impresion',3,'p_impresion','sintactico.py',45),
  ('impresion -> PRINT','impresion',1,'p_impresion','sintactico.py',46),
  ('puts -> PUTS LPAREN argumento RPAREN','puts',4,'p_puts','sintactico.py',49),
  ('puts -> PUTS argumento','puts',2,'p_puts','sintactico.py',50),
  ('puts -> PUTS LPAREN RPAREN','puts',3,'p_puts','sintactico.py',51),
  ('puts -> PUTS','puts',1,'p_puts','sintactico.py',52),
  ('argumento -> expression','argumento',1,'p_argumento','sintactico.py',55),
  ('argumento -> cadena','argumento',1,'p_argumento','sintactico.py',56),
  ('argumento -> condicional','argumento',1,'p_argumento','sintactico.py',57),
  ('iterable -> expression DOBLEPUNTO expression','iterable',3,'p_iterable','sintactico.py',59),
  ('condicional -> boolean','condicional',1,'p_condicional','sintactico.py',61),
  ('condicional -> boolOp','condicional',1,'p_condicional','sintactico.py',62),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',64),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',65),
  ('boolOp -> factor MAYORQUE factor','boolOp',3,'p_boolOp','sintactico.py',68),
  ('boolOp -> factor MENORQUE factor','boolOp',3,'p_boolOp','sintactico.py',69),
  ('boolOp -> factor MAYORIGUALQUE factor','boolOp',3,'p_boolOp','sintactico.py',70),
  ('boolOp -> factor MENORIGUALQUE factor','boolOp',3,'p_boolOp','sintactico.py',71),
  ('boolOp -> factor IGUALQUE factor','boolOp',3,'p_boolOp','sintactico.py',72),
  ('boolOp -> factor DIFERENTEQUE factor','boolOp',3,'p_boolOp','sintactico.py',73),
  ('boolOp -> factor ANDLOGICO factor','boolOp',3,'p_boolOp','sintactico.py',74),
  ('boolOp -> factor ORLOGICO factor','boolOp',3,'p_boolOp','sintactico.py',75),
  ('cadena -> STRING','cadena',1,'p_argumento_cadena','sintactico.py',78),
  ('cadena -> STRINGCC','cadena',1,'p_argumento_cadena','sintactico.py',79),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','sintactico.py',81),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','sintactico.py',86),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',91),
  ('term -> term TIMES factor','term',3,'p_term_times','sintactico.py',96),
  ('term -> term DIVIDE factor','term',3,'p_term_div','sintactico.py',101),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',106),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',111),
  ('factor -> ID','factor',1,'p_factor_var','sintactico.py',115),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','sintactico.py',118),
]
