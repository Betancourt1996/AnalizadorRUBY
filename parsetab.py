
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDLOGICO CASE COMA DIFERENTEQUE DIVIDE DO DOBLEPUNTO DOSPUNTOS ELSE ELSEIF ELSIF END EQUALS FALSE FLOAT FOR ID IF IGUALQUE IN LCORCHETE LLLAVE LPAREN MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MINUS NEGACION NUMBER OR ORLOGICO PLUS PRINT PUTS RCORCHETE RLLAVE RPAREN STRING STRINGCC THEN TIMES TRUE UNLESS UNTIL WHEN WHILEsentencias : impresion\n                    | argumento\n                    | puts\n                    | asignacionsentencias : IF LPAREN condicional RPAREN sentencias END\n                  | IF LPAREN condicional RPAREN THEN sentencias END\n                  | IF LPAREN condicional RPAREN  sentencias elseifanidado ELSE sentencias ENDsentencias : UNLESS LPAREN condicional RPAREN sentencias END\n                  | UNLESS LPAREN condicional RPAREN THEN sentencias END\n                  | UNLESS LPAREN condicional RPAREN sentencias elseifanidado  ELSE sentencias ENDasignacion : ID EQUALS variable\n                  | ID LCORCHETE NUMBER RCORCHETE EQUALS iterableempty :elseifanidado : ELSEIF condicional sentencias\n                    | ELSEIF condicional sentencias elseifanidado\n                    | emptysentencias : UNTIL LPAREN condicional RPAREN DO sentencias END\n                      | UNTIL  condicional  DO sentencias END\n                      | UNTIL LPAREN condicional RPAREN  sentencias END\n                      | UNTIL  condicional   sentencias ENDsentencias : CASE expression whenMuchos END\n                  | CASE expression whenMuchos ELSE sentencias ENDwhenMuchos : WHEN rangeYespression sentencias\n                  | WHEN rangeYespression sentencias whenMuchos\n                  | emptyrangeYespression : range\n                        | expressionsentencias : WHILE LPAREN condicional RPAREN DO sentencias END\n                      | WHILE  condicional  DO sentencias END\n                      | WHILE LPAREN condicional RPAREN  sentencias END\n                      | WHILE  condicional   sentencias ENDsentencias : FOR ID IN iterable sentencias END\n                  | FOR ID IN iterable DO sentencias ENDimpresion : PRINT LPAREN argumento RPAREN\n                  | PRINT argumento\n                  | PRINT LPAREN RPAREN\n                  | PRINT puts : PUTS LPAREN argumento RPAREN END\n                  | PUTS argumento\n                  | PUTS LPAREN RPAREN\n                  | PUTS variable : condicional\n                | cadena\n                | expression\n                | iterabledato : NUMBER\n            | cadena\n            | booleanargumento : variableiterable : range\n                | array\n                | hasharray : LCORCHETE valorArray RCORCHETEvalorArray : dato COMA valorArray\n                  | dato hash : LLLAVE claveValor RLLAVEclaveValor : cadena DOSPUNTOS variable COMA claveValor\n                  | cadena DOSPUNTOS variable\n                  | NUMBER DOSPUNTOS variable COMA claveValor\n                  | NUMBER DOSPUNTOS variable range : expression DOBLEPUNTO expressioncondicional : logicalOperationlogicalOperation : logicalOperation logicalOp logicalOperationlogicalOp : AND\n                | ORlogicalOperation : boolean\n                        | IDboolean : TRUE\n               | FALSE\n               | exprBool\n               | NEGACION booleanexprBool : exprBool boolOperator exprBoolboolOperator :  MAYORQUE\n                   |  MENORQUE\n                   |  MAYORIGUALQUE\n                   |  MENORIGUALQUE\n                   |  IGUALQUE\n                   |  DIFERENTEQUE\n                   |  ANDLOGICO\n                   |  ORLOGICO exprBool : factorcadena : STRING\n               | STRINGCCexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : factorfactor : NUMBERfactor : FLOATfactor : IDfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'IF':([0,21,23,26,27,28,29,30,33,34,35,37,40,41,44,45,46,52,82,84,87,92,93,94,96,107,109,110,111,112,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,174,175,177,],[6,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,-91,-89,-92,6,-67,-81,6,-71,-93,6,-84,-85,-61,6,-53,-63,-87,-88,-56,-72,6,6,6,6,6,-26,-27,6,6,6,6,6,6,6,6,6,6,]),'UNLESS':([0,21,23,26,27,28,29,30,33,34,35,37,40,41,44,45,46,52,82,84,87,92,93,94,96,107,109,110,111,112,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,174,175,177,],[9,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,-91,-89,-92,9,-67,-81,9,-71,-93,9,-84,-85,-61,9,-53,-63,-87,-88,-56,-72,9,9,9,9,9,-26,-27,9,9,9,9,9,9,9,9,9,9,]),'UNTIL':([0,21,23,26,27,28,29,30,33,34,35,37,40,41,44,45,46,52,82,84,87,92,93,94,96,107,109,110,111,112,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,174,175,177,],[10,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,-91,-89,-92,10,-67,-81,10,-71,-93,10,-84,-85,-61,10,-53,-63,-87,-88,-56,-72,10,10,10,10,10,-26,-27,10,10,10,10,10,10,10,10,10,10,]),'CASE':([0,21,23,26,27,28,29,30,33,34,35,37,40,41,44,45,46,52,82,84,87,92,93,94,96,107,109,110,111,112,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,174,175,177,],[11,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,-91,-89,-92,11,-67,-81,11,-71,-93,11,-84,-85,-61,11,-53,-63,-87,-88,-56,-72,11,11,11,11,11,-26,-27,11,11,11,11,11,11,11,11,11,11,]),'WHILE':([0,21,23,26,27,28,29,30,33,34,35,37,40,41,44,45,46,52,82,84,87,92,93,94,96,107,109,110,111,112,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,174,175,177,],[13,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,-91,-89,-92,13,-67,-81,13,-71,-93,13,-84,-85,-61,13,-53,-63,-87,-88,-56,-72,13,13,13,13,13,-26,-27,13,13,13,13,13,13,13,13,13,13,]),'FOR':([0,21,23,26,27,28,29,30,33,34,35,37,40,41,44,45,46,52,82,84,87,92,93,94,96,107,109,110,111,112,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,174,175,177,],[14,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,-91,-89,-92,14,-67,-81,14,-71,-93,14,-84,-85,-61,14,-53,-63,-87,-88,-56,-72,14,14,14,14,14,-26,-27,14,14,14,14,14,14,14,14,14,14,]),'PRINT':([0,21,23,26,27,28,29,30,33,34,35,37,40,41,44,45,46,52,82,84,87,92,93,94,96,107,109,110,111,112,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,174,175,177,],[17,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,-91,-89,-92,17,-67,-81,17,-71,-93,17,-84,-85,-61,17,-53,-63,-87,-88,-56,-72,17,17,17,17,17,-26,-27,17,17,17,17,17,17,17,17,17,17,]),'PUTS':([0,21,23,26,27,28,29,30,33,34,35,37,40,41,44,45,46,52,82,84,87,92,93,94,96,107,109,110,111,112,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,174,175,177,],[19,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,-91,-89,-92,19,-67,-81,19,-71,-93,19,-84,-85,-61,19,-53,-63,-87,-88,-56,-72,19,19,19,19,19,-26,-27,19,19,19,19,19,19,19,19,19,19,]),'ID':([0,7,10,11,13,14,17,19,20,21,23,26,27,28,29,30,33,34,35,36,37,38,40,41,42,43,44,45,46,48,49,50,51,52,54,56,58,65,66,67,68,69,73,74,75,76,77,78,79,80,81,82,84,87,90,92,93,94,96,98,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,151,157,174,175,177,],[15,41,45,41,45,53,45,45,41,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,41,-91,45,-89,-92,45,45,15,-67,-81,41,41,41,45,15,45,104,104,45,-64,-65,41,41,41,-73,-74,-75,-76,-77,-78,-79,-80,-71,-93,15,41,-84,-85,-61,15,41,-53,41,-63,-87,-88,-56,45,45,-72,15,15,15,15,15,-26,-27,15,15,15,15,15,15,15,41,45,15,15,15,]),'STRING':([0,17,19,20,21,23,26,27,28,29,30,32,33,34,35,37,40,41,44,45,46,52,54,56,58,82,84,87,92,93,94,96,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,153,154,174,175,177,],[24,24,24,24,-90,-62,-86,-50,-51,-52,-66,24,-68,-69,-70,-91,-89,-92,24,-67,-81,24,24,24,24,-71,-93,24,-84,-85,-61,24,-53,24,-63,-87,-88,-56,24,24,-72,24,24,24,24,24,-26,-27,24,24,24,24,24,24,24,24,24,24,24,24,]),'STRINGCC':([0,17,19,20,21,23,26,27,28,29,30,32,33,34,35,37,40,41,44,45,46,52,54,56,58,82,84,87,92,93,94,96,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,153,154,174,175,177,],[25,25,25,25,-90,-62,-86,-50,-51,-52,-66,25,-68,-69,-70,-91,-89,-92,25,-67,-81,25,25,25,25,-71,-93,25,-84,-85,-61,25,-53,25,-63,-87,-88,-56,25,25,-72,25,25,25,25,25,-26,-27,25,25,25,25,25,25,25,25,25,25,25,25,]),'LCORCHETE':([0,15,17,19,21,23,26,27,28,29,30,33,34,35,37,40,41,44,45,46,52,54,56,58,82,84,87,92,93,94,96,98,107,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,151,174,175,177,],[20,55,20,20,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,-91,-89,-92,20,-67,-81,20,20,20,20,-71,-93,20,-84,-85,-61,20,20,-53,-63,-87,-88,-56,20,20,-72,20,20,20,20,20,-26,-27,20,20,20,20,20,20,20,20,20,20,20,]),'LLLAVE':([0,17,19,21,23,26,27,28,29,30,33,34,35,37,40,41,44,45,46,52,54,56,58,82,84,87,92,93,94,96,98,107,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,151,174,175,177,],[32,32,32,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,-91,-89,-92,32,-67,-81,32,32,32,32,-71,-93,32,-84,-85,-61,32,32,-53,-63,-87,-88,-56,32,32,-72,32,32,32,32,32,-26,-27,32,32,32,32,32,32,32,32,32,32,32,]),'TRUE':([0,10,13,17,19,20,21,23,26,27,28,29,30,33,34,35,36,37,38,40,41,42,43,44,45,46,51,52,54,56,58,65,66,67,82,84,87,92,93,94,96,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,157,174,175,177,],[33,33,33,33,33,33,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,33,-91,33,-89,-92,33,33,33,-67,-81,33,33,33,33,33,33,-64,-65,-71,-93,33,-84,-85,-61,33,-53,33,-63,-87,-88,-56,33,33,-72,33,33,33,33,33,-26,-27,33,33,33,33,33,33,33,33,33,33,33,]),'FALSE':([0,10,13,17,19,20,21,23,26,27,28,29,30,33,34,35,36,37,38,40,41,42,43,44,45,46,51,52,54,56,58,65,66,67,82,84,87,92,93,94,96,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,157,174,175,177,],[34,34,34,34,34,34,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,34,-91,34,-89,-92,34,34,34,-67,-81,34,34,34,34,34,34,-64,-65,-71,-93,34,-84,-85,-61,34,-53,34,-63,-87,-88,-56,34,34,-72,34,34,34,34,34,-26,-27,34,34,34,34,34,34,34,34,34,34,34,]),'NEGACION':([0,10,13,17,19,20,21,23,26,27,28,29,30,33,34,35,36,37,38,40,41,42,43,44,45,46,51,52,54,56,58,65,66,67,82,84,87,92,93,94,96,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,157,174,175,177,],[36,36,36,36,36,36,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,36,-91,36,-89,-92,36,36,36,-67,-81,36,36,36,36,36,36,-64,-65,-71,-93,36,-84,-85,-61,36,-53,36,-63,-87,-88,-56,36,36,-72,36,36,36,36,36,-26,-27,36,36,36,36,36,36,36,36,36,36,36,]),'NUMBER':([0,7,10,11,13,17,19,20,21,23,26,27,28,29,30,32,33,34,35,36,37,38,40,41,42,43,44,45,46,48,49,50,51,52,54,55,56,58,65,66,67,68,69,73,74,75,76,77,78,79,80,81,82,84,87,90,92,93,94,96,98,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,151,153,154,157,174,175,177,],[21,21,21,21,21,21,21,62,-90,-62,-86,-50,-51,-52,-66,72,-68,-69,-70,21,-91,21,-89,-92,21,21,21,-67,-81,21,21,21,21,21,21,100,21,21,21,-64,-65,21,21,21,-73,-74,-75,-76,-77,-78,-79,-80,-71,-93,21,21,-84,-85,-61,21,21,-53,62,-63,-87,-88,-56,21,21,-72,21,21,21,21,21,-26,-27,21,21,21,21,21,21,21,21,72,72,21,21,21,21,]),'FLOAT':([0,7,10,11,13,17,19,20,21,23,26,27,28,29,30,33,34,35,36,37,38,40,41,42,43,44,45,46,48,49,50,51,52,54,56,58,65,66,67,68,69,73,74,75,76,77,78,79,80,81,82,84,87,90,92,93,94,96,98,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,151,157,174,175,177,],[37,37,37,37,37,37,37,37,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,37,-91,37,-89,-92,37,37,37,-67,-81,37,37,37,37,37,37,37,37,37,-64,-65,37,37,37,-73,-74,-75,-76,-77,-78,-79,-80,-71,-93,37,37,-84,-85,-61,37,37,-53,37,-63,-87,-88,-56,37,37,-72,37,37,37,37,37,-26,-27,37,37,37,37,37,37,37,37,37,37,37,37,]),'LPAREN':([0,6,7,9,10,11,13,17,19,20,21,23,26,27,28,29,30,33,34,35,36,37,38,40,41,42,43,44,45,46,48,49,50,51,52,54,56,58,65,66,67,68,69,73,74,75,76,77,78,79,80,81,82,84,87,90,92,93,94,96,98,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,129,138,140,141,146,150,151,157,174,175,177,],[7,38,7,42,43,7,51,56,58,7,-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,7,-91,7,-89,-92,7,7,7,-67,-81,7,7,7,7,7,7,7,7,7,-64,-65,7,7,7,-73,-74,-75,-76,-77,-78,-79,-80,-71,-93,7,7,-84,-85,-61,7,7,-53,7,-63,-87,-88,-56,7,7,-72,7,7,7,7,7,-26,-27,7,7,7,7,7,7,7,7,7,7,7,7,]),'$end':([1,2,3,4,5,8,12,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,33,34,35,37,40,41,45,46,57,59,82,84,92,93,94,99,102,106,107,109,110,111,112,115,120,121,128,132,143,148,152,155,160,164,165,168,169,171,176,178,179,180,181,185,187,],[0,-1,-2,-3,-4,-42,-44,-67,-45,-37,-49,-41,-90,-43,-62,-82,-83,-86,-50,-51,-52,-66,-81,-68,-69,-70,-91,-89,-92,-67,-81,-35,-39,-71,-93,-84,-85,-61,-11,-36,-40,-53,-63,-87,-88,-56,-72,-20,-21,-31,-34,-18,-29,-38,-5,-8,-19,-22,-30,-32,-12,-6,-9,-17,-28,-33,-7,-10,]),'END':([2,3,4,5,8,12,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,33,34,35,37,40,41,45,46,47,57,59,82,84,88,89,91,92,93,94,97,99,102,106,107,109,110,111,112,115,119,120,121,127,128,132,133,137,139,142,143,144,145,147,148,149,152,155,159,160,162,163,164,165,166,167,168,169,170,171,176,178,179,180,181,182,184,185,187,],[-1,-2,-3,-4,-42,-44,-67,-45,-37,-49,-41,-90,-43,-62,-82,-83,-86,-50,-51,-52,-66,-81,-68,-69,-70,-91,-89,-92,-67,-81,-13,-35,-39,-71,-93,120,121,-25,-84,-85,-61,128,-11,-36,-40,-53,-63,-87,-88,-56,-72,143,-20,-21,148,-31,-34,152,155,160,164,-18,165,-13,168,-29,169,-38,-5,176,-8,178,179,-19,-22,-24,180,-30,-32,181,-12,-6,-9,-17,-28,-33,185,187,-7,-10,]),'ELSEIF':([2,3,4,5,8,12,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,33,34,35,37,40,41,45,46,57,59,82,84,92,93,94,99,102,106,107,109,110,111,112,115,120,121,128,132,137,139,143,148,152,155,160,164,165,168,169,171,176,178,179,180,181,183,185,187,],[-1,-2,-3,-4,-42,-44,-67,-45,-37,-49,-41,-90,-43,-62,-82,-83,-86,-50,-51,-52,-66,-81,-68,-69,-70,-91,-89,-92,-67,-81,-35,-39,-71,-93,-84,-85,-61,-11,-36,-40,-53,-63,-87,-88,-56,-72,-20,-21,-31,-34,157,157,-18,-29,-38,-5,-8,-19,-22,-30,-32,-12,-6,-9,-17,-28,-33,157,-7,-10,]),'ELSE':([2,3,4,5,8,12,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,33,34,35,37,40,41,45,46,47,57,59,82,84,89,91,92,93,94,99,102,106,107,109,110,111,112,115,120,121,128,132,137,139,143,145,148,152,155,156,158,160,161,164,165,166,168,169,171,176,178,179,180,181,183,185,186,187,],[-1,-2,-3,-4,-42,-44,-67,-45,-37,-49,-41,-90,-43,-62,-82,-83,-86,-50,-51,-52,-66,-81,-68,-69,-70,-91,-89,-92,-67,-81,-13,-35,-39,-71,-93,122,-25,-84,-85,-61,-11,-36,-40,-53,-63,-87,-88,-56,-72,-20,-21,-31,-34,-13,-13,-18,-13,-29,-38,-5,174,-16,-8,177,-19,-22,-24,-30,-32,-12,-6,-9,-17,-28,-33,-13,-7,-15,-10,]),'WHEN':([2,3,4,5,8,12,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,33,34,35,37,40,41,45,46,47,57,59,82,84,92,93,94,99,102,106,107,109,110,111,112,115,120,121,128,132,143,145,148,152,155,160,164,165,168,169,171,176,178,179,180,181,185,187,],[-1,-2,-3,-4,-42,-44,-67,-45,-37,-49,-41,-90,-43,-62,-82,-83,-86,-50,-51,-52,-66,-81,-68,-69,-70,-91,-89,-92,-67,-81,90,-35,-39,-71,-93,-84,-85,-61,-11,-36,-40,-53,-63,-87,-88,-56,-72,-20,-21,-31,-34,-18,90,-29,-38,-5,-8,-19,-22,-30,-32,-12,-6,-9,-17,-28,-33,-7,-10,]),'RPAREN':([8,16,18,21,22,23,24,25,26,27,28,29,30,31,33,34,35,37,39,40,41,45,46,56,58,82,83,84,85,86,92,93,94,95,101,103,104,105,107,109,110,111,112,115,],[-42,-45,-49,-90,-43,-62,-82,-83,-86,-50,-51,-52,-66,-81,-68,-69,-70,-91,84,-89,-92,-67,-81,102,106,-71,116,-93,117,118,-84,-85,-61,126,132,84,-67,133,-53,-63,-87,-88,-56,-72,]),'COMA':([8,12,16,21,22,23,24,25,26,27,28,29,30,31,33,34,35,37,40,41,45,46,61,62,63,64,82,84,92,93,94,107,109,110,111,112,115,135,136,],[-42,-44,-45,-90,-43,-62,-82,-83,-86,-50,-51,-52,-66,-81,-68,-69,-70,-91,-89,-92,-67,-81,108,-46,-47,-48,-71,-93,-84,-85,-61,-53,-63,-87,-88,-56,-72,153,154,]),'RLLAVE':([8,12,16,21,22,23,24,25,26,27,28,29,30,31,33,34,35,37,40,41,45,46,70,82,84,92,93,94,107,109,110,111,112,115,135,136,172,173,],[-42,-44,-45,-90,-43,-62,-82,-83,-86,-50,-51,-52,-66,-81,-68,-69,-70,-91,-89,-92,-67,-81,112,-71,-93,-84,-85,-61,-53,-63,-87,-88,-56,-72,-58,-60,-57,-59,]),'PLUS':([12,15,21,26,31,37,39,40,41,45,47,84,92,93,94,103,104,110,111,125,130,],[48,-92,-90,-86,-89,-91,48,-89,-92,-92,48,-93,-84,-85,48,48,-92,-87,-88,48,48,]),'MINUS':([12,15,21,26,31,37,39,40,41,45,47,84,92,93,94,103,104,110,111,125,130,],[49,-92,-90,-86,-89,-91,49,-89,-92,-92,49,-93,-84,-85,49,49,-92,-87,-88,49,49,]),'DOBLEPUNTO':([12,15,21,26,31,37,40,41,45,84,92,93,103,104,110,111,125,130,],[50,-92,-90,-86,-89,-91,-89,-92,-92,-93,-84,-85,50,-92,-87,-88,50,50,]),'EQUALS':([15,131,],[54,151,]),'AND':([15,21,23,30,31,33,34,35,37,41,45,46,82,84,104,109,115,],[-67,-90,66,-66,-81,-68,-69,-70,-91,-92,-67,-81,-71,-93,-67,66,-72,]),'OR':([15,21,23,30,31,33,34,35,37,41,45,46,82,84,104,109,115,],[-67,-90,67,-66,-81,-68,-69,-70,-91,-92,-67,-81,-71,-93,-67,67,-72,]),'TIMES':([15,21,26,31,37,40,41,45,84,92,93,104,110,111,],[-92,-90,68,-89,-91,-89,-92,-92,-93,68,68,-92,-87,-88,]),'DIVIDE':([15,21,26,31,37,40,41,45,84,92,93,104,110,111,],[-92,-90,69,-89,-91,-89,-92,-92,-93,69,69,-92,-87,-88,]),'MAYORQUE':([15,21,31,35,37,41,45,46,62,84,104,115,],[-92,-90,-81,74,-91,-92,-92,-81,-90,-93,-92,74,]),'MENORQUE':([15,21,31,35,37,41,45,46,62,84,104,115,],[-92,-90,-81,75,-91,-92,-92,-81,-90,-93,-92,75,]),'MAYORIGUALQUE':([15,21,31,35,37,41,45,46,62,84,104,115,],[-92,-90,-81,76,-91,-92,-92,-81,-90,-93,-92,76,]),'MENORIGUALQUE':([15,21,31,35,37,41,45,46,62,84,104,115,],[-92,-90,-81,77,-91,-92,-92,-81,-90,-93,-92,77,]),'IGUALQUE':([15,21,31,35,37,41,45,46,62,84,104,115,],[-92,-90,-81,78,-91,-92,-92,-81,-90,-93,-92,78,]),'DIFERENTEQUE':([15,21,31,35,37,41,45,46,62,84,104,115,],[-92,-90,-81,79,-91,-92,-92,-81,-90,-93,-92,79,]),'ANDLOGICO':([15,21,31,35,37,41,45,46,62,84,104,115,],[-92,-90,-81,80,-91,-92,-92,-81,-90,-93,-92,80,]),'ORLOGICO':([15,21,31,35,37,41,45,46,62,84,104,115,],[-92,-90,-81,81,-91,-92,-92,-81,-90,-93,-92,81,]),'DO':([21,23,26,27,28,29,30,33,34,35,37,40,41,44,45,46,52,82,84,92,93,94,107,109,110,111,112,115,118,126,129,],[-90,-62,-86,-50,-51,-52,-66,-68,-69,-70,-91,-89,-92,87,-67,-81,96,-71,-93,-84,-85,-61,-53,-63,-87,-88,-56,-72,141,146,150,]),'RCORCHETE':([21,24,25,33,34,35,37,41,46,60,61,62,63,64,82,84,100,115,134,],[-90,-82,-83,-68,-69,-70,-91,-92,-81,107,-55,-46,-47,-48,-71,-93,131,-72,-54,]),'DOSPUNTOS':([24,25,71,72,],[-82,-83,113,114,]),'IN':([53,],[98,]),'THEN':([116,117,],[138,140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencias':([0,44,52,87,96,116,117,118,122,123,126,129,138,140,141,146,150,174,175,177,],[1,88,97,119,127,137,139,142,144,145,147,149,159,162,163,167,170,182,183,184,]),'impresion':([0,44,52,87,96,116,117,118,122,123,126,129,138,140,141,146,150,174,175,177,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'argumento':([0,17,19,44,52,56,58,87,96,116,117,118,122,123,126,129,138,140,141,146,150,174,175,177,],[3,57,59,3,3,101,105,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'puts':([0,44,52,87,96,116,117,118,122,123,126,129,138,140,141,146,150,174,175,177,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'asignacion':([0,44,52,87,96,116,117,118,122,123,126,129,138,140,141,146,150,174,175,177,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'condicional':([0,10,13,17,19,38,42,43,44,51,52,54,56,58,87,96,113,114,116,117,118,122,123,126,129,138,140,141,146,150,157,174,175,177,],[8,44,52,8,8,83,85,86,8,95,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,175,8,8,8,]),'expression':([0,7,11,17,19,43,44,50,51,52,54,56,58,87,90,96,98,113,114,116,117,118,122,123,126,129,138,140,141,146,150,151,174,175,177,],[12,39,47,12,12,39,12,94,39,12,12,103,103,12,125,12,130,12,12,12,12,12,12,12,12,12,12,12,12,12,12,130,12,12,12,]),'iterable':([0,17,19,44,52,54,56,58,87,96,98,113,114,116,117,118,122,123,126,129,138,140,141,146,150,151,174,175,177,],[16,16,16,16,16,16,16,16,16,16,129,16,16,16,16,16,16,16,16,16,16,16,16,16,16,171,16,16,16,]),'variable':([0,17,19,44,52,54,56,58,87,96,113,114,116,117,118,122,123,126,129,138,140,141,146,150,174,175,177,],[18,18,18,18,18,99,18,18,18,18,135,136,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'cadena':([0,17,19,20,32,44,52,54,56,58,87,96,108,113,114,116,117,118,122,123,126,129,138,140,141,146,150,153,154,174,175,177,],[22,22,22,63,71,22,22,22,22,22,22,22,63,22,22,22,22,22,22,22,22,22,22,22,22,22,22,71,71,22,22,22,]),'logicalOperation':([0,10,13,17,19,38,42,43,44,51,52,54,56,58,65,87,96,113,114,116,117,118,122,123,126,129,138,140,141,146,150,157,174,175,177,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,109,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'term':([0,7,11,17,19,43,44,48,49,50,51,52,54,56,58,87,90,96,98,113,114,116,117,118,122,123,126,129,138,140,141,146,150,151,174,175,177,],[26,26,26,26,26,26,26,92,93,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'range':([0,17,19,44,52,54,56,58,87,90,96,98,113,114,116,117,118,122,123,126,129,138,140,141,146,150,151,174,175,177,],[27,27,27,27,27,27,27,27,27,124,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'array':([0,17,19,44,52,54,56,58,87,96,98,113,114,116,117,118,122,123,126,129,138,140,141,146,150,151,174,175,177,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'hash':([0,17,19,44,52,54,56,58,87,96,98,113,114,116,117,118,122,123,126,129,138,140,141,146,150,151,174,175,177,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'boolean':([0,10,13,17,19,20,36,38,42,43,44,51,52,54,56,58,65,87,96,108,113,114,116,117,118,122,123,126,129,138,140,141,146,150,157,174,175,177,],[30,30,30,30,30,64,82,30,30,30,30,30,30,30,30,30,30,30,30,64,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'factor':([0,7,10,11,13,17,19,20,36,38,42,43,44,48,49,50,51,52,54,56,58,65,68,69,73,87,90,96,98,108,113,114,116,117,118,122,123,126,129,138,140,141,146,150,151,157,174,175,177,],[31,40,46,40,46,31,31,46,46,46,46,31,31,40,40,40,31,31,31,31,31,46,110,111,46,31,40,31,40,46,31,31,31,31,31,31,31,31,31,31,31,31,31,31,40,46,31,31,31,]),'exprBool':([0,10,13,17,19,20,36,38,42,43,44,51,52,54,56,58,65,73,87,96,108,113,114,116,117,118,122,123,126,129,138,140,141,146,150,157,174,175,177,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,115,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'valorArray':([20,108,],[60,134,]),'dato':([20,108,],[61,61,]),'logicalOp':([23,109,],[65,65,]),'claveValor':([32,153,154,],[70,172,173,]),'boolOperator':([35,115,],[73,73,]),'whenMuchos':([47,145,],[89,166,]),'empty':([47,137,139,145,183,],[91,158,158,91,158,]),'rangeYespression':([90,],[123,]),'elseifanidado':([137,139,183,],[156,161,186,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencias","S'",1,None,None,None),
  ('sentencias -> impresion','sentencias',1,'p_sentencias','sintactico.py',8),
  ('sentencias -> argumento','sentencias',1,'p_sentencias','sintactico.py',9),
  ('sentencias -> puts','sentencias',1,'p_sentencias','sintactico.py',10),
  ('sentencias -> asignacion','sentencias',1,'p_sentencias','sintactico.py',11),
  ('sentencias -> IF LPAREN condicional RPAREN sentencias END','sentencias',6,'p_sentencias_if','sintactico.py',16),
  ('sentencias -> IF LPAREN condicional RPAREN THEN sentencias END','sentencias',7,'p_sentencias_if','sintactico.py',17),
  ('sentencias -> IF LPAREN condicional RPAREN sentencias elseifanidado ELSE sentencias END','sentencias',9,'p_sentencias_if','sintactico.py',18),
  ('sentencias -> UNLESS LPAREN condicional RPAREN sentencias END','sentencias',6,'p_sentencias_unless','sintactico.py',21),
  ('sentencias -> UNLESS LPAREN condicional RPAREN THEN sentencias END','sentencias',7,'p_sentencias_unless','sintactico.py',22),
  ('sentencias -> UNLESS LPAREN condicional RPAREN sentencias elseifanidado ELSE sentencias END','sentencias',9,'p_sentencias_unless','sintactico.py',23),
  ('asignacion -> ID EQUALS variable','asignacion',3,'p_asignacion','sintactico.py',27),
  ('asignacion -> ID LCORCHETE NUMBER RCORCHETE EQUALS iterable','asignacion',6,'p_asignacion','sintactico.py',28),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',31),
  ('elseifanidado -> ELSEIF condicional sentencias','elseifanidado',3,'p_elseifanidado','sintactico.py',35),
  ('elseifanidado -> ELSEIF condicional sentencias elseifanidado','elseifanidado',4,'p_elseifanidado','sintactico.py',36),
  ('elseifanidado -> empty','elseifanidado',1,'p_elseifanidado','sintactico.py',37),
  ('sentencias -> UNTIL LPAREN condicional RPAREN DO sentencias END','sentencias',7,'p_sentencias_until','sintactico.py',40),
  ('sentencias -> UNTIL condicional DO sentencias END','sentencias',5,'p_sentencias_until','sintactico.py',41),
  ('sentencias -> UNTIL LPAREN condicional RPAREN sentencias END','sentencias',6,'p_sentencias_until','sintactico.py',42),
  ('sentencias -> UNTIL condicional sentencias END','sentencias',4,'p_sentencias_until','sintactico.py',43),
  ('sentencias -> CASE expression whenMuchos END','sentencias',4,'p_sentencias_case','sintactico.py',46),
  ('sentencias -> CASE expression whenMuchos ELSE sentencias END','sentencias',6,'p_sentencias_case','sintactico.py',47),
  ('whenMuchos -> WHEN rangeYespression sentencias','whenMuchos',3,'p_whenMuchos','sintactico.py',50),
  ('whenMuchos -> WHEN rangeYespression sentencias whenMuchos','whenMuchos',4,'p_whenMuchos','sintactico.py',51),
  ('whenMuchos -> empty','whenMuchos',1,'p_whenMuchos','sintactico.py',52),
  ('rangeYespression -> range','rangeYespression',1,'p_rangeYexpression','sintactico.py',54),
  ('rangeYespression -> expression','rangeYespression',1,'p_rangeYexpression','sintactico.py',55),
  ('sentencias -> WHILE LPAREN condicional RPAREN DO sentencias END','sentencias',7,'p_sentencias_while','sintactico.py',58),
  ('sentencias -> WHILE condicional DO sentencias END','sentencias',5,'p_sentencias_while','sintactico.py',59),
  ('sentencias -> WHILE LPAREN condicional RPAREN sentencias END','sentencias',6,'p_sentencias_while','sintactico.py',60),
  ('sentencias -> WHILE condicional sentencias END','sentencias',4,'p_sentencias_while','sintactico.py',61),
  ('sentencias -> FOR ID IN iterable sentencias END','sentencias',6,'p_sentencias_for','sintactico.py',65),
  ('sentencias -> FOR ID IN iterable DO sentencias END','sentencias',7,'p_sentencias_for','sintactico.py',66),
  ('impresion -> PRINT LPAREN argumento RPAREN','impresion',4,'p_impresion','sintactico.py',68),
  ('impresion -> PRINT argumento','impresion',2,'p_impresion','sintactico.py',69),
  ('impresion -> PRINT LPAREN RPAREN','impresion',3,'p_impresion','sintactico.py',70),
  ('impresion -> PRINT','impresion',1,'p_impresion','sintactico.py',71),
  ('puts -> PUTS LPAREN argumento RPAREN END','puts',5,'p_puts','sintactico.py',74),
  ('puts -> PUTS argumento','puts',2,'p_puts','sintactico.py',75),
  ('puts -> PUTS LPAREN RPAREN','puts',3,'p_puts','sintactico.py',76),
  ('puts -> PUTS','puts',1,'p_puts','sintactico.py',77),
  ('variable -> condicional','variable',1,'p_variable','sintactico.py',79),
  ('variable -> cadena','variable',1,'p_variable','sintactico.py',80),
  ('variable -> expression','variable',1,'p_variable','sintactico.py',81),
  ('variable -> iterable','variable',1,'p_variable','sintactico.py',82),
  ('dato -> NUMBER','dato',1,'p_dato','sintactico.py',84),
  ('dato -> cadena','dato',1,'p_dato','sintactico.py',85),
  ('dato -> boolean','dato',1,'p_dato','sintactico.py',86),
  ('argumento -> variable','argumento',1,'p_argumento','sintactico.py',88),
  ('iterable -> range','iterable',1,'p_iterable','sintactico.py',90),
  ('iterable -> array','iterable',1,'p_iterable','sintactico.py',91),
  ('iterable -> hash','iterable',1,'p_iterable','sintactico.py',92),
  ('array -> LCORCHETE valorArray RCORCHETE','array',3,'p_array','sintactico.py',94),
  ('valorArray -> dato COMA valorArray','valorArray',3,'p_valorArray','sintactico.py',97),
  ('valorArray -> dato','valorArray',1,'p_valorArray','sintactico.py',98),
  ('hash -> LLLAVE claveValor RLLAVE','hash',3,'p_hash','sintactico.py',100),
  ('claveValor -> cadena DOSPUNTOS variable COMA claveValor','claveValor',5,'p_claveValor','sintactico.py',102),
  ('claveValor -> cadena DOSPUNTOS variable','claveValor',3,'p_claveValor','sintactico.py',103),
  ('claveValor -> NUMBER DOSPUNTOS variable COMA claveValor','claveValor',5,'p_claveValor','sintactico.py',104),
  ('claveValor -> NUMBER DOSPUNTOS variable','claveValor',3,'p_claveValor','sintactico.py',105),
  ('range -> expression DOBLEPUNTO expression','range',3,'p_range','sintactico.py',107),
  ('condicional -> logicalOperation','condicional',1,'p_condicional','sintactico.py',110),
  ('logicalOperation -> logicalOperation logicalOp logicalOperation','logicalOperation',3,'p_logicalOperation','sintactico.py',112),
  ('logicalOp -> AND','logicalOp',1,'p_logicalOp','sintactico.py',114),
  ('logicalOp -> OR','logicalOp',1,'p_logicalOp','sintactico.py',115),
  ('logicalOperation -> boolean','logicalOperation',1,'p_logicalOperation_logicalValue','sintactico.py',117),
  ('logicalOperation -> ID','logicalOperation',1,'p_logicalOperation_logicalValue','sintactico.py',118),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',120),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',121),
  ('boolean -> exprBool','boolean',1,'p_boolean','sintactico.py',122),
  ('boolean -> NEGACION boolean','boolean',2,'p_boolean','sintactico.py',123),
  ('exprBool -> exprBool boolOperator exprBool','exprBool',3,'p_exprBool_boolOperation','sintactico.py',126),
  ('boolOperator -> MAYORQUE','boolOperator',1,'p_boolOperator','sintactico.py',129),
  ('boolOperator -> MENORQUE','boolOperator',1,'p_boolOperator','sintactico.py',130),
  ('boolOperator -> MAYORIGUALQUE','boolOperator',1,'p_boolOperator','sintactico.py',131),
  ('boolOperator -> MENORIGUALQUE','boolOperator',1,'p_boolOperator','sintactico.py',132),
  ('boolOperator -> IGUALQUE','boolOperator',1,'p_boolOperator','sintactico.py',133),
  ('boolOperator -> DIFERENTEQUE','boolOperator',1,'p_boolOperator','sintactico.py',134),
  ('boolOperator -> ANDLOGICO','boolOperator',1,'p_boolOperator','sintactico.py',135),
  ('boolOperator -> ORLOGICO','boolOperator',1,'p_boolOperator','sintactico.py',136),
  ('exprBool -> factor','exprBool',1,'p_exprBool_notBool','sintactico.py',138),
  ('cadena -> STRING','cadena',1,'p_cadena','sintactico.py',141),
  ('cadena -> STRINGCC','cadena',1,'p_cadena','sintactico.py',142),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','sintactico.py',144),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','sintactico.py',149),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',154),
  ('term -> term TIMES factor','term',3,'p_term_times','sintactico.py',159),
  ('term -> term DIVIDE factor','term',3,'p_term_div','sintactico.py',164),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',169),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',174),
  ('factor -> FLOAT','factor',1,'p_factor_float','sintactico.py',177),
  ('factor -> ID','factor',1,'p_factor_var','sintactico.py',180),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','sintactico.py',183),
]
